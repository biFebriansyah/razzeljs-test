{"ast":null,"code":"import _extends from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\nimport _regeneratorRuntime from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"helpers/api\";\nimport { useDropzone } from \"react-dropzone\";\nimport { connect } from \"react-redux\";\nimport { OptionsContext } from \"helpers/contex\";\nimport ImageCroper from \"components/ImageCroper/ImageCrop\";\nimport { useToasts } from \"react-toast-notifications\";\nimport \"./scss/style.scoped.scss\";\n\nfunction CreateList(props) {\n  var isOpen = props.open ? \"show\" : \"hide\";\n  var defaultImage = \"https://res.cloudinary.com/devops2/image/upload/v1612864760/musicfly/m40_x31sif.jpg\";\n\n  var _useState = useState(\"Masuk Nama\"),\n      ListName = _useState[0],\n      setListName = _useState[1];\n\n  var _useState2 = useState(false),\n      onLoading = _useState2[0],\n      setOnLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      codeList = _useState3[0],\n      SetCodeList = _useState3[1];\n\n  var _useState4 = useState(null),\n      imageList = _useState4[0],\n      setImageList = _useState4[1];\n\n  var _useState5 = useState(null),\n      imageFile = _useState5[0],\n      setImageFile = _useState5[1];\n\n  var _useState6 = useState(false),\n      cropOpen = _useState6[0],\n      setCropOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      isUpdate = _useState7[0],\n      setIsUpdate = _useState7[1];\n\n  var _useState8 = useState({}),\n      LisData = _useState8[0],\n      setListData = _useState8[1];\n\n  var _useState9 = useState(null),\n      croppedImage = _useState9[0],\n      setCroppedImage = _useState9[1];\n\n  var _useContext = useContext(OptionsContext),\n      changeList = _useContext.changeList;\n\n  var _useDropzone = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyboard: true,\n    noClick: true\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      open = _useDropzone.open,\n      acceptedFiles = _useDropzone.acceptedFiles;\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  useEffect(function () {\n    if (props.id !== null) {\n      var apis = new api(props.tokens);\n      var username_personal = props.users.data.username_personal;\n      apis.req({\n        method: \"GET\",\n        url: \"/playlist?order[id_playlist]=ASC&per_page=2&page=1&active=1&user_playlist=\".concat(username_personal, \"&id_playlist=\").concat(props.id)\n      }).then(function (res) {\n        var data = res.data.data;\n\n        var newData = _objectSpread(_objectSpread({}, data[0]), {}, {\n          foto_path_playlist: data[0].foto_path_playlist ? data[0].foto_path_playlist : defaultImage\n        });\n\n        setListName(newData.complete_name_playlist);\n        setListData(newData);\n        SetCodeList(newData.object_code_playlist);\n        setIsUpdate(true);\n      })[\"catch\"](function (er) {\n        console.log(er);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.id]);\n  useEffect(function () {\n    if (acceptedFiles.length > 0) {\n      acceptedFiles.map(function (data) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          var file = reader.result;\n          setImageList(file);\n        };\n\n        reader.readAsDataURL(data);\n        return true;\n      });\n      setCropOpen(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [acceptedFiles]);\n\n  var toggle = function toggle() {\n    setImageList(defaultImage);\n    setIsUpdate(false);\n    setCropOpen(false);\n    setListName(\"Masukan Nama\");\n    setCroppedImage(null);\n    setImageFile(null);\n    props.toggleModal();\n  };\n\n  var SaveImage = function SaveImage(data) {\n    setCroppedImage(data.image);\n    setImageFile(data.file);\n    setCropOpen(false);\n  };\n\n  var inputChange = function inputChange(el) {\n    setListName(el.target.value);\n  };\n\n  var getListLength = function getListLength() {\n    return new Promise(function (resolve, reject) {\n      var apis = new api(props.tokens);\n      var username_personal = props.users.data.username_personal;\n      apis.req({\n        method: \"GET\",\n        url: \"/playlist?order[id_playlist]=ASC&per_page=999&page=1&active=1&user_playlist=\".concat(username_personal)\n      }).then(function (res) {\n        var data = res.data.data;\n        resolve(data.length);\n      })[\"catch\"](function (er) {\n        reject(er);\n      });\n    });\n  };\n\n  var saveList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var apis, bodyFormData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setOnLoading(true);\n              apis = new api(props.tokens);\n              bodyFormData = new FormData();\n              bodyFormData.append(\"complete_name\", ListName);\n\n              if (imageFile) {\n                bodyFormData.append(\"file\", imageFile);\n              } else {\n                bodyFormData.append(\"file\", defaultImage);\n              }\n\n              apis.FormData({\n                method: \"POST\",\n                url: \"/playlist\",\n                data: bodyFormData\n              }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var newLength;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return getListLength();\n\n                      case 2:\n                        newLength = _context.sent;\n                        setOnLoading(false);\n                        addToast(\"\".concat(ListName, \" Berhasil dibuat\"), {\n                          appearance: \"success\"\n                        });\n                        changeList(newLength);\n                        toggle();\n\n                      case 7:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })))[\"catch\"](function (er) {\n                setOnLoading(false);\n                addToast(\"\".concat(ListName, \" gagal dibuat\"), {\n                  appearance: \"error\"\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function saveList() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var UpdateListPic = function UpdateListPic() {\n    return new Promise(function (resolve, reject) {\n      var apis = new api(props.tokens);\n      var bodyFormData = new FormData();\n      bodyFormData.append(\"file\", imageFile);\n      bodyFormData.append(\"playlist_code\", codeList);\n      apis.FormData({\n        method: \"POST\",\n        url: \"/playlist/upload/foto\",\n        data: bodyFormData\n      }).then(function (res) {\n        var data = res.data.data;\n        resolve(data);\n      })[\"catch\"](function (er) {\n        reject(er);\n      });\n    });\n  };\n\n  var UpdateList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var apis;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setOnLoading(true);\n              apis = new api(props.tokens);\n              apis.req({\n                method: \"PUT\",\n                url: \"/playlist\",\n                data: {\n                  id: props.id,\n                  complete_name: ListName,\n                  description: \"List Favorite Playlist\"\n                }\n              }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        if (!imageFile) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        _context3.next = 3;\n                        return UpdateListPic();\n\n                      case 3:\n                        setOnLoading(false);\n                        changeList(Math.floor(Math.random() * 20) + 1);\n                        addToast(\"\".concat(ListName, \" Berhasil dupdate\"), {\n                          appearance: \"success\"\n                        });\n                        toggle();\n\n                      case 7:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              })))[\"catch\"](function (er) {\n                setOnLoading(false);\n                addToast(\"\".concat(ListName, \" gagal dupdate\"), {\n                  appearance: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function UpdateList() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onLoadStyle = {\n    width: \"100%\",\n    height: \"100vh\",\n    display: onLoading ? \"flex\" : \"none\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: \"40px\",\n    backdropFilter: \"blur(1px)\",\n    color: \"white\",\n    zIndex: 9999\n  };\n  return __jsx(\"div\", {\n    className: \"container \".concat(isOpen)\n  }, __jsx(\"div\", {\n    style: onLoadStyle\n  }, __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text\",\n    style: {\n      marginRight: \"10px\"\n    }\n  }), __jsx(\"span\", {\n    className: \"text\"\n  }, \"Wait..\")), cropOpen ? __jsx(ImageCroper, {\n    image: imageList,\n    save: SaveImage,\n    ratio: 16 / 9,\n    close: function close() {\n      return setCropOpen(false);\n    }\n  }) : __jsx(\"div\", {\n    className: \"modal-cos\"\n  }, __jsx(\"div\", {\n    className: \"btn-close\",\n    onClick: toggle\n  }, __jsx(\"i\", {\n    className: \"icon-close\"\n  })), __jsx(\"div\", _extends({}, getRootProps({\n    className: \"dropzone\"\n  }), {\n    className: \"m-t-n-xxs item pos-rlt\"\n  }), __jsx(\"input\", getInputProps()), __jsx(\"div\", {\n    className: \"center text-center m-t-n choose-image\"\n  }, __jsx(Link, {\n    to: \"#\",\n    \"data-toggle\": \"class\",\n    onClick: open\n  }, __jsx(\"i\", {\n    className: \"fa fa-file i-2x text text-image\"\n  }), __jsx(\"h3\", {\n    className: \"text-image\"\n  }, \"Choose image\"))), __jsx(\"div\", {\n    className: \"bottom gd bg-info wrapper-lg container-btn\"\n  }, __jsx(\"div\", {\n    className: \"inpform\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"h2 font-thin\",\n    autoFocus: true,\n    name: \"username\",\n    autoComplete: \"off\",\n    onChange: inputChange,\n    value: ListName\n  })), __jsx(Link, {\n    className: \"btn btn-Black\",\n    to: \"#\",\n    onClick: isUpdate ? UpdateList : saveList\n  }, __jsx(\"span\", {\n    className: \"text\"\n  }, \"Save\"), __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text-active\",\n    style: {\n      marginRight: \"10px\"\n    }\n  }), __jsx(\"span\", {\n    className: \"text-active\"\n  }, \"Wait..\"))), __jsx(\"div\", {\n    className: \"imageCover\"\n  }, __jsx(\"img\", {\n    className: \"img-full\",\n    src: isUpdate && croppedImage === null ? LisData.foto_path_playlist : croppedImage !== null ? croppedImage : defaultImage,\n    alt: \"...\"\n  })))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users,\n    tokens: state.users.token\n  };\n};\n\nexport default connect(mapStateToProps)(CreateList);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/CreatePlayList/CreateList.jsx"],"names":["React","useState","useContext","useEffect","Link","api","useDropzone","connect","OptionsContext","ImageCroper","useToasts","CreateList","props","isOpen","open","defaultImage","ListName","setListName","onLoading","setOnLoading","codeList","SetCodeList","imageList","setImageList","imageFile","setImageFile","cropOpen","setCropOpen","isUpdate","setIsUpdate","LisData","setListData","croppedImage","setCroppedImage","changeList","accept","noKeyboard","noClick","getRootProps","getInputProps","acceptedFiles","addToast","id","apis","tokens","username_personal","users","data","req","method","url","then","res","newData","foto_path_playlist","complete_name_playlist","object_code_playlist","er","console","log","length","map","reader","FileReader","onload","file","result","readAsDataURL","toggle","toggleModal","SaveImage","image","inputChange","el","target","value","getListLength","Promise","resolve","reject","saveList","bodyFormData","FormData","append","newLength","appearance","UpdateListPic","UpdateList","complete_name","description","Math","floor","random","onLoadStyle","width","height","display","position","justifyContent","alignItems","fontSize","backdropFilter","color","zIndex","marginRight","className","mapStateToProps","state","token"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,0BAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAMC,MAAM,GAAGD,KAAK,CAACE,IAAN,GAAa,MAAb,GAAsB,MAArC;AACA,MAAIC,YAAY,GACZ,qFADJ;;AAEA,kBAAgCd,QAAQ,CAAC,YAAD,CAAxC;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkChB,QAAQ,CAAC,KAAD,CAA1C;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgClB,QAAQ,CAAC,EAAD,CAAxC;AAAA,MAAOmB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCpB,QAAQ,CAAC,IAAD,CAA1C;AAAA,MAAOqB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkCtB,QAAQ,CAAC,IAAD,CAA1C;AAAA,MAAOuB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAgCxB,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAOyB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgC1B,QAAQ,CAAC,KAAD,CAAxC;AAAA,MAAO2B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA+B5B,QAAQ,CAAC,EAAD,CAAvC;AAAA,MAAO6B,OAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAAwC9B,QAAQ,CAAC,IAAD,CAAhD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAuB/B,UAAU,CAACM,cAAD,CAAjC;AAAA,MAAQ0B,UAAR,eAAQA,UAAR;;AACA,qBAA6D5B,WAAW,CAAC;AACrE6B,IAAAA,MAAM,EAAE,uBAD6D;AAErEC,IAAAA,UAAU,EAAE,IAFyD;AAGrEC,IAAAA,OAAO,EAAE;AAH4D,GAAD,CAAxE;AAAA,MAAQC,YAAR,gBAAQA,YAAR;AAAA,MAAsBC,aAAtB,gBAAsBA,aAAtB;AAAA,MAAqCzB,IAArC,gBAAqCA,IAArC;AAAA,MAA2C0B,aAA3C,gBAA2CA,aAA3C;;AAKA,mBAAqB9B,SAAS,EAA9B;AAAA,MAAQ+B,QAAR,cAAQA,QAAR;;AAEAtC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIS,KAAK,CAAC8B,EAAN,KAAa,IAAjB,EAAuB;AACnB,UAAMC,IAAI,GAAG,IAAItC,GAAJ,CAAQO,KAAK,CAACgC,MAAd,CAAb;AACA,UAAQC,iBAAR,GAA8BjC,KAAK,CAACkC,KAAN,CAAYC,IAA1C,CAAQF,iBAAR;AACAF,MAAAA,IAAI,CAACK,GAAL,CAAS;AACLC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,GAAG,sFAA+EL,iBAA/E,0BACCjC,KAAK,CAAC8B,EADP;AAFE,OAAT,EAMKS,IANL,CAMU,UAACC,GAAD,EAAS;AACX,YAAQL,IAAR,GAAiBK,GAAG,CAACL,IAArB,CAAQA,IAAR;;AACA,YAAMM,OAAO,mCACNN,IAAI,CAAC,CAAD,CADE;AAETO,UAAAA,kBAAkB,EAAEP,IAAI,CAAC,CAAD,CAAJ,CAAQO,kBAAR,GACdP,IAAI,CAAC,CAAD,CAAJ,CAAQO,kBADM,GAEdvC;AAJG,UAAb;;AAMAE,QAAAA,WAAW,CAACoC,OAAO,CAACE,sBAAT,CAAX;AACAxB,QAAAA,WAAW,CAACsB,OAAD,CAAX;AACAhC,QAAAA,WAAW,CAACgC,OAAO,CAACG,oBAAT,CAAX;AACA3B,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAlBL,WAmBW,UAAC4B,EAAD,EAAQ;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH,OArBL;AAsBH,KA1BW,CA2BZ;;AACH,GA5BQ,EA4BN,CAAC7C,KAAK,CAAC8B,EAAP,CA5BM,CAAT;AA8BAvC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIqC,aAAa,CAACoB,MAAd,GAAuB,CAA3B,EAA8B;AAC1BpB,MAAAA,aAAa,CAACqB,GAAd,CAAkB,UAACd,IAAD,EAAU;AACxB,YAAMe,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgB,YAAM;AAClB,cAAMC,IAAI,GAAGH,MAAM,CAACI,MAApB;AACA3C,UAAAA,YAAY,CAAC0C,IAAD,CAAZ;AACH,SAHD;;AAIAH,QAAAA,MAAM,CAACK,aAAP,CAAqBpB,IAArB;AACA,eAAO,IAAP;AACH,OARD;AASApB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAZW,CAaZ;;AACH,GAdQ,EAcN,CAACa,aAAD,CAdM,CAAT;;AAgBA,MAAM4B,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB7C,IAAAA,YAAY,CAACR,YAAD,CAAZ;AACAc,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAV,IAAAA,WAAW,CAAC,cAAD,CAAX;AACAgB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAb,IAAAA,KAAK,CAACyD,WAAN;AACH,GARD;;AAUA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACvB,IAAD,EAAU;AACxBd,IAAAA,eAAe,CAACc,IAAI,CAACwB,KAAN,CAAf;AACA9C,IAAAA,YAAY,CAACsB,IAAI,CAACkB,IAAN,CAAZ;AACAtC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAJD;;AAMA,MAAM6C,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAQ;AACxBxD,IAAAA,WAAW,CAACwD,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAX;AACH,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAMpC,IAAI,GAAG,IAAItC,GAAJ,CAAQO,KAAK,CAACgC,MAAd,CAAb;AACA,UAAQC,iBAAR,GAA8BjC,KAAK,CAACkC,KAAN,CAAYC,IAA1C,CAAQF,iBAAR;AACAF,MAAAA,IAAI,CAACK,GAAL,CAAS;AACLC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,GAAG,wFAAiFL,iBAAjF;AAFE,OAAT,EAIKM,IAJL,CAIU,UAACC,GAAD,EAAS;AACX,YAAQL,IAAR,GAAiBK,GAAG,CAACL,IAArB,CAAQA,IAAR;AACA+B,QAAAA,OAAO,CAAC/B,IAAI,CAACa,MAAN,CAAP;AACH,OAPL,WAQW,UAACH,EAAD,EAAQ;AACXsB,QAAAA,MAAM,CAACtB,EAAD,CAAN;AACH,OAVL;AAWH,KAdM,CAAP;AAeH,GAhBD;;AAkBA,MAAMuB,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACb7D,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACMwB,cAAAA,IAFO,GAEA,IAAItC,GAAJ,CAAQO,KAAK,CAACgC,MAAd,CAFA;AAGPqC,cAAAA,YAHO,GAGQ,IAAIC,QAAJ,EAHR;AAIbD,cAAAA,YAAY,CAACE,MAAb,CAAoB,eAApB,EAAqCnE,QAArC;;AACA,kBAAIQ,SAAJ,EAAe;AACXyD,gBAAAA,YAAY,CAACE,MAAb,CAAoB,MAApB,EAA4B3D,SAA5B;AACH,eAFD,MAEO;AACHyD,gBAAAA,YAAY,CAACE,MAAb,CAAoB,MAApB,EAA4BpE,YAA5B;AACH;;AACD4B,cAAAA,IAAI,CAACuC,QAAL,CAAc;AACVjC,gBAAAA,MAAM,EAAE,MADE;AAEVC,gBAAAA,GAAG,aAFO;AAGVH,gBAAAA,IAAI,EAAEkC;AAHI,eAAd,EAKK9B,IALL,wEAKU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACsByB,aAAa,EADnC;;AAAA;AACIQ,wBAAAA,SADJ;AAEFjE,wBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsB,wBAAAA,QAAQ,WAAIzB,QAAJ,uBAAgC;AAAEqE,0BAAAA,UAAU,EAAE;AAAd,yBAAhC,CAAR;AACAnD,wBAAAA,UAAU,CAACkD,SAAD,CAAV;AACAhB,wBAAAA,MAAM;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALV,aAYW,UAACX,EAAD,EAAQ;AACXtC,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsB,gBAAAA,QAAQ,WAAIzB,QAAJ,oBAA6B;AAAEqE,kBAAAA,UAAU,EAAE;AAAd,iBAA7B,CAAR;AACH,eAfL;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARL,QAAQ;AAAA;AAAA;AAAA,KAAd;;AA4BA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,WAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAMpC,IAAI,GAAG,IAAItC,GAAJ,CAAQO,KAAK,CAACgC,MAAd,CAAb;AACA,UAAMqC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,MAAAA,YAAY,CAACE,MAAb,CAAoB,MAApB,EAA4B3D,SAA5B;AACAyD,MAAAA,YAAY,CAACE,MAAb,CAAoB,eAApB,EAAqC/D,QAArC;AACAuB,MAAAA,IAAI,CAACuC,QAAL,CAAc;AACVjC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,GAAG,yBAFO;AAGVH,QAAAA,IAAI,EAAEkC;AAHI,OAAd,EAKK9B,IALL,CAKU,UAACC,GAAD,EAAS;AACX,YAAQL,IAAR,GAAiBK,GAAG,CAACL,IAArB,CAAQA,IAAR;AACA+B,QAAAA,OAAO,CAAC/B,IAAD,CAAP;AACH,OARL,WASW,UAACU,EAAD,EAAQ;AACXsB,QAAAA,MAAM,CAACtB,EAAD,CAAN;AACH,OAXL;AAYH,KAjBM,CAAP;AAkBH,GAnBD;;AAqBA,MAAM8B,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfpE,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACMwB,cAAAA,IAFS,GAEF,IAAItC,GAAJ,CAAQO,KAAK,CAACgC,MAAd,CAFE;AAGfD,cAAAA,IAAI,CAACK,GAAL,CAAS;AACLC,gBAAAA,MAAM,EAAE,KADH;AAELC,gBAAAA,GAAG,EAAE,WAFA;AAGLH,gBAAAA,IAAI,EAAE;AACFL,kBAAAA,EAAE,EAAE9B,KAAK,CAAC8B,EADR;AAEF8C,kBAAAA,aAAa,EAAExE,QAFb;AAGFyE,kBAAAA,WAAW,EAAE;AAHX;AAHD,eAAT,EASKtC,IATL,wEASU;AAAA;AAAA;AAAA;AAAA;AAAA,6BACE3B,SADF;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEQ8D,aAAa,EAFrB;;AAAA;AAIFnE,wBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAe,wBAAAA,UAAU,CAACwD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAlC,CAAV;AACAnD,wBAAAA,QAAQ,WAAIzB,QAAJ,wBAAiC;AAAEqE,0BAAAA,UAAU,EAAE;AAAd,yBAAjC,CAAR;AACAjB,wBAAAA,MAAM;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATV,aAkBW,UAACX,EAAD,EAAQ;AACXtC,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsB,gBAAAA,QAAQ,WAAIzB,QAAJ,qBAA8B;AAAEqE,kBAAAA,UAAU,EAAE;AAAd,iBAA9B,CAAR;AACH,eArBL;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVE,UAAU;AAAA;AAAA;AAAA,KAAhB;;AA2BA,MAAMM,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAE,MADS;AAEhBC,IAAAA,MAAM,EAAE,OAFQ;AAGhBC,IAAAA,OAAO,EAAE9E,SAAS,GAAG,MAAH,GAAY,MAHd;AAIhB+E,IAAAA,QAAQ,EAAE,UAJM;AAKhBC,IAAAA,cAAc,EAAE,QALA;AAMhBC,IAAAA,UAAU,EAAE,QANI;AAOhBC,IAAAA,QAAQ,EAAE,MAPM;AAQhBC,IAAAA,cAAc,EAAE,WARA;AAShBC,IAAAA,KAAK,EAAE,OATS;AAUhBC,IAAAA,MAAM,EAAE;AAVQ,GAApB;AAaA,SACI;AAAK,IAAA,SAAS,sBAAe1F,MAAf;AAAd,KACI;AAAK,IAAA,KAAK,EAAEgF;AAAZ,KACI;AAAG,IAAA,SAAS,EAAC,4BAAb;AAA0C,IAAA,KAAK,EAAE;AAAEW,MAAAA,WAAW,EAAE;AAAf;AAAjD,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,cAFJ,CADJ,EAKK9E,QAAQ,GACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAEJ,SADX;AAEI,IAAA,IAAI,EAAEgD,SAFV;AAGI,IAAA,KAAK,EAAE,KAAK,CAHhB;AAII,IAAA,KAAK,EAAE;AAAA,aAAM3C,WAAW,CAAC,KAAD,CAAjB;AAAA;AAJX,IADK,GAQL;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEyC;AAApC,KACI;AAAG,IAAA,SAAS,EAAC;AAAb,IADJ,CADJ,EAII,0BACQ9B,YAAY,CAAC;AAAEmE,IAAAA,SAAS,EAAE;AAAb,GAAD,CADpB;AAEI,IAAA,SAAS,EAAC;AAFd,MAII,eAAWlE,aAAa,EAAxB,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,mBAAY,OAAzB;AAAiC,IAAA,OAAO,EAAEzB;AAA1C,KACI;AAAG,IAAA,SAAS,EAAC;AAAb,IADJ,EAEI;AAAI,IAAA,SAAS,EAAC;AAAd,oBAFJ,CADJ,CALJ,EAWI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,YAAY,EAAC,KALjB;AAMI,IAAA,QAAQ,EAAE0D,WANd;AAOI,IAAA,KAAK,EAAExD;AAPX,IADJ,CADJ,EAYI,MAAC,IAAD;AACI,IAAA,SAAS,iBADb;AAEI,IAAA,EAAE,EAAC,GAFP;AAGI,IAAA,OAAO,EAAEY,QAAQ,GAAG2D,UAAH,GAAgBP;AAHrC,KAKI;AAAM,IAAA,SAAS,EAAC;AAAhB,YALJ,EAMI;AACI,IAAA,SAAS,EAAC,mCADd;AAEI,IAAA,KAAK,EAAE;AAAEwB,MAAAA,WAAW,EAAE;AAAf;AAFX,IANJ,EAUI;AAAM,IAAA,SAAS,EAAC;AAAhB,cAVJ,CAZJ,CAXJ,EAoCI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,GAAG,EACC5E,QAAQ,IAAII,YAAY,KAAK,IAA7B,GACMF,OAAO,CAACwB,kBADd,GAEMtB,YAAY,KAAK,IAAjB,GACAA,YADA,GAEAjB,YAPd;AASI,IAAA,GAAG,EAAC;AATR,IADJ,CApCJ,CAJJ,CAbR,CADJ;AAwEH;;AAED,IAAM2F,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACH7D,IAAAA,KAAK,EAAE6D,KAAK,CAAC7D,KADV;AAEHF,IAAAA,MAAM,EAAE+D,KAAK,CAAC7D,KAAN,CAAY8D;AAFjB,GAAP;AAIH,CALD;;AAOA,eAAerG,OAAO,CAACmG,eAAD,CAAP,CAAyB/F,UAAzB,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport api from \"helpers/api\"\nimport { useDropzone } from \"react-dropzone\"\nimport { connect } from \"react-redux\"\nimport { OptionsContext } from \"helpers/contex\"\nimport ImageCroper from \"components/ImageCroper/ImageCrop\"\nimport { useToasts } from \"react-toast-notifications\"\nimport \"./scss/style.scoped.scss\"\n\nfunction CreateList(props) {\n    const isOpen = props.open ? \"show\" : \"hide\"\n    let defaultImage =\n        \"https://res.cloudinary.com/devops2/image/upload/v1612864760/musicfly/m40_x31sif.jpg\"\n    const [ListName, setListName] = useState(\"Masuk Nama\")\n    const [onLoading, setOnLoading] = useState(false)\n    const [codeList, SetCodeList] = useState(\"\")\n    const [imageList, setImageList] = useState(null)\n    const [imageFile, setImageFile] = useState(null)\n    const [cropOpen, setCropOpen] = useState(false)\n    const [isUpdate, setIsUpdate] = useState(false)\n    const [LisData, setListData] = useState({})\n    const [croppedImage, setCroppedImage] = useState(null)\n    const { changeList } = useContext(OptionsContext)\n    const { getRootProps, getInputProps, open, acceptedFiles } = useDropzone({\n        accept: \"image/jpeg, image/png\",\n        noKeyboard: true,\n        noClick: true,\n    })\n    const { addToast } = useToasts()\n\n    useEffect(() => {\n        if (props.id !== null) {\n            const apis = new api(props.tokens)\n            const { username_personal } = props.users.data\n            apis.req({\n                method: \"GET\",\n                url: `/playlist?order[id_playlist]=ASC&per_page=2&page=1&active=1&user_playlist=${username_personal}&id_playlist=${\n                    props.id\n                }`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    const newData = {\n                        ...data[0],\n                        foto_path_playlist: data[0].foto_path_playlist\n                            ? data[0].foto_path_playlist\n                            : defaultImage,\n                    }\n                    setListName(newData.complete_name_playlist)\n                    setListData(newData)\n                    SetCodeList(newData.object_code_playlist)\n                    setIsUpdate(true)\n                })\n                .catch((er) => {\n                    console.log(er)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.id])\n\n    useEffect(() => {\n        if (acceptedFiles.length > 0) {\n            acceptedFiles.map((data) => {\n                const reader = new FileReader()\n                reader.onload = () => {\n                    const file = reader.result\n                    setImageList(file)\n                }\n                reader.readAsDataURL(data)\n                return true\n            })\n            setCropOpen(true)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [acceptedFiles])\n\n    const toggle = () => {\n        setImageList(defaultImage)\n        setIsUpdate(false)\n        setCropOpen(false)\n        setListName(\"Masukan Nama\")\n        setCroppedImage(null)\n        setImageFile(null)\n        props.toggleModal()\n    }\n\n    const SaveImage = (data) => {\n        setCroppedImage(data.image)\n        setImageFile(data.file)\n        setCropOpen(false)\n    }\n\n    const inputChange = (el) => {\n        setListName(el.target.value)\n    }\n\n    const getListLength = () => {\n        return new Promise((resolve, reject) => {\n            const apis = new api(props.tokens)\n            const { username_personal } = props.users.data\n            apis.req({\n                method: \"GET\",\n                url: `/playlist?order[id_playlist]=ASC&per_page=999&page=1&active=1&user_playlist=${username_personal}`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data.length)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    const saveList = async () => {\n        setOnLoading(true)\n        const apis = new api(props.tokens)\n        const bodyFormData = new FormData()\n        bodyFormData.append(\"complete_name\", ListName)\n        if (imageFile) {\n            bodyFormData.append(\"file\", imageFile)\n        } else {\n            bodyFormData.append(\"file\", defaultImage)\n        }\n        apis.FormData({\n            method: \"POST\",\n            url: `/playlist`,\n            data: bodyFormData,\n        })\n            .then(async () => {\n                const newLength = await getListLength()\n                setOnLoading(false)\n                addToast(`${ListName} Berhasil dibuat`, { appearance: \"success\" })\n                changeList(newLength)\n                toggle()\n            })\n            .catch((er) => {\n                setOnLoading(false)\n                addToast(`${ListName} gagal dibuat`, { appearance: \"error\" })\n            })\n    }\n\n    const UpdateListPic = () => {\n        return new Promise((resolve, reject) => {\n            const apis = new api(props.tokens)\n            const bodyFormData = new FormData()\n            bodyFormData.append(\"file\", imageFile)\n            bodyFormData.append(\"playlist_code\", codeList)\n            apis.FormData({\n                method: \"POST\",\n                url: `/playlist/upload/foto`,\n                data: bodyFormData,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    const UpdateList = async () => {\n        setOnLoading(true)\n        const apis = new api(props.tokens)\n        apis.req({\n            method: \"PUT\",\n            url: \"/playlist\",\n            data: {\n                id: props.id,\n                complete_name: ListName,\n                description: \"List Favorite Playlist\",\n            },\n        })\n            .then(async () => {\n                if (imageFile) {\n                    await UpdateListPic()\n                }\n                setOnLoading(false)\n                changeList(Math.floor(Math.random() * 20) + 1)\n                addToast(`${ListName} Berhasil dupdate`, { appearance: \"success\" })\n                toggle()\n            })\n            .catch((er) => {\n                setOnLoading(false)\n                addToast(`${ListName} gagal dupdate`, { appearance: \"error\" })\n            })\n    }\n\n    const onLoadStyle = {\n        width: \"100%\",\n        height: \"100vh\",\n        display: onLoading ? \"flex\" : \"none\",\n        position: \"absolute\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: \"40px\",\n        backdropFilter: \"blur(1px)\",\n        color: \"white\",\n        zIndex: 9999,\n    }\n\n    return (\n        <div className={`container ${isOpen}`}>\n            <div style={onLoadStyle}>\n                <i className=\"fa fa-spin fa-spinner text\" style={{ marginRight: \"10px\" }} />\n                <span className=\"text\">Wait..</span>\n            </div>\n            {cropOpen ? (\n                <ImageCroper\n                    image={imageList}\n                    save={SaveImage}\n                    ratio={16 / 9}\n                    close={() => setCropOpen(false)}\n                />\n            ) : (\n                <div className=\"modal-cos\">\n                    <div className=\"btn-close\" onClick={toggle}>\n                        <i className=\"icon-close\" />\n                    </div>\n                    <div\n                        {...getRootProps({ className: \"dropzone\" })}\n                        className=\"m-t-n-xxs item pos-rlt\"\n                    >\n                        <input {...getInputProps()} />\n                        <div className=\"center text-center m-t-n choose-image\">\n                            <Link to=\"#\" data-toggle=\"class\" onClick={open}>\n                                <i className=\"fa fa-file i-2x text text-image\" />\n                                <h3 className=\"text-image\">Choose image</h3>\n                            </Link>\n                        </div>\n                        <div className=\"bottom gd bg-info wrapper-lg container-btn\">\n                            <div className=\"inpform\">\n                                <input\n                                    type=\"text\"\n                                    className=\"h2 font-thin\"\n                                    autoFocus={true}\n                                    name=\"username\"\n                                    autoComplete=\"off\"\n                                    onChange={inputChange}\n                                    value={ListName}\n                                />\n                            </div>\n                            <Link\n                                className={`btn btn-Black`}\n                                to=\"#\"\n                                onClick={isUpdate ? UpdateList : saveList}\n                            >\n                                <span className=\"text\">Save</span>\n                                <i\n                                    className=\"fa fa-spin fa-spinner text-active\"\n                                    style={{ marginRight: \"10px\" }}\n                                />\n                                <span className=\"text-active\">Wait..</span>\n                            </Link>\n                        </div>\n                        <div className=\"imageCover\">\n                            <img\n                                className=\"img-full\"\n                                src={\n                                    isUpdate && croppedImage === null\n                                        ? LisData.foto_path_playlist\n                                        : croppedImage !== null\n                                        ? croppedImage\n                                        : defaultImage\n                                }\n                                alt=\"...\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        tokens: state.users.token,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateList)\n"]},"metadata":{},"sourceType":"module"}