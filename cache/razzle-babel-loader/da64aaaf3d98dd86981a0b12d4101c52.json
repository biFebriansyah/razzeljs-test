{"ast":null,"code":"import _asyncToGenerator from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/ab/Code/reactJs/razzel/src/components/ImageCroper/ImageCrop.jsx\";\nvar __jsx = React.createElement;\nimport _regeneratorRuntime from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/regenerator\";\nimport \"./scss/style.scoped.scss\";\nimport React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cropper from \"react-easy-crop\";\nimport Slider from \"rc-slider\";\nimport getCroppedImg from \"helpers/cropImage\";\n\nfunction ImageCrop(props) {\n  var _useState = useState({\n    x: 0,\n    y: 0\n  }),\n      crop = _useState[0],\n      setCrop = _useState[1];\n\n  var _useState2 = useState(1),\n      zoom = _useState2[0],\n      setZoom = _useState2[1];\n\n  var _useState3 = useState(null),\n      croppedAreaPixels = _useState3[0],\n      setCroppedAreaPixels = _useState3[1];\n\n  var onCropComplete = useCallback(function (croppedArea, croppedAreaPixels) {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  var saveCroppedImage = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var croppedImage;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return getCroppedImg(props.image, croppedAreaPixels);\n\n          case 3:\n            croppedImage = _context.sent;\n            props.save(croppedImage);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [croppedAreaPixels]);\n  return __jsx(\"div\", {\n    className: \"modal-crop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-close\",\n    onClick: function onClick() {\n      props.close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cropCon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Cropper, {\n    image: props.image,\n    crop: crop,\n    zoom: zoom,\n    aspect: props.ratio,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cropControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"zoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"ZOOM Image\"), __jsx(Slider, {\n    value: zoom,\n    min: 1,\n    max: 3,\n    step: 0.1,\n    onChange: function onChange(val) {\n      setZoom(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"btn-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    className: \"btn btn-success\",\n    to: \"#\",\n    onClick: saveCroppedImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Save\"), __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text-active\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), __jsx(\"span\", {\n    className: \"text-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Wait..\")))));\n}\n\nexport default ImageCrop;","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/ImageCroper/ImageCrop.jsx"],"names":["React","useState","useCallback","Link","Cropper","Slider","getCroppedImg","ImageCrop","props","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","saveCroppedImage","image","croppedImage","save","console","error","close","ratio","val","marginRight"],"mappings":"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","sourcesContent":["import \"./scss/style.scoped.scss\"\nimport React, { useState, useCallback } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Cropper from \"react-easy-crop\"\nimport Slider from \"rc-slider\"\nimport getCroppedImg from \"helpers/cropImage\"\n\nfunction ImageCrop(props) {\n    const [crop, setCrop] = useState({ x: 0, y: 0 })\n    const [zoom, setZoom] = useState(1)\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels)\n    }, [])\n\n    const saveCroppedImage = useCallback(async () => {\n        try {\n            const croppedImage = await getCroppedImg(props.image, croppedAreaPixels)\n            props.save(croppedImage)\n        } catch (e) {\n            console.error(e)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [croppedAreaPixels])\n\n    return (\n        <div className=\"modal-crop\">\n            <div\n                className=\"btn-close\"\n                onClick={() => {\n                    props.close()\n                }}\n            >\n                <i className=\"icon-close\" />\n            </div>\n            <div className=\"cropCon\">\n                <Cropper\n                    image={props.image}\n                    crop={crop}\n                    zoom={zoom}\n                    aspect={props.ratio}\n                    onCropChange={setCrop}\n                    onCropComplete={onCropComplete}\n                    onZoomChange={setZoom}\n                />\n            </div>\n            <div className=\"cropControl\">\n                <div className=\"zoom\">\n                    <h4>ZOOM Image</h4>\n                    <Slider\n                        value={zoom}\n                        min={1}\n                        max={3}\n                        step={0.1}\n                        onChange={(val) => {\n                            setZoom(val)\n                        }}\n                    />\n                </div>\n                <div className=\"btn-save\">\n                    <Link className={`btn btn-success`} to=\"#\" onClick={saveCroppedImage}>\n                        <span className=\"text\">Save</span>\n                        <i\n                            className=\"fa fa-spin fa-spinner text-active\"\n                            style={{ marginRight: \"10px\" }}\n                        />\n                        <span className=\"text-active\">Wait..</span>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCrop\n"]},"metadata":{},"sourceType":"module"}