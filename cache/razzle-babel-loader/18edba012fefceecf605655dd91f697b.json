{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"./App\";\nimport React from \"react\";\nimport express from \"express\";\nimport configureStore from \"./redux/store\";\nimport { StaticRouter } from \"react-router-dom\";\nimport { renderToString } from \"react-dom/server\";\nimport { Provider } from \"react-redux\";\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join(\"\") : \"\" : \"\";\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = \"\") => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join(\"\") : \"\" : \"\";\n};\n\nconst server = express();\nserver.disable(\"x-powered-by\").use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get(\"/*\", (req, res) => {\n  const context = {};\n  const initialStateUsers = {\n    data: {},\n    isAuth: false,\n    token: null,\n    premium: false,\n    paycode: \"\"\n  }; // Compile an initial state\n\n  const preloadedState = {\n    users: initialStateUsers\n  }; // Create a new Redux store instance\n\n  const store = configureStore(preloadedState);\n  const markup = renderToString(__jsx(Provider, {\n    store: store\n  }, __jsx(StaticRouter, {\n    context: context,\n    location: req.url\n  }, __jsx(App, null))));\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(`<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, \"client\")}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, \"client\", \" defer crossorigin\")}\n    </body>\n</html>`);\n  }\n});\nexport default server;","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/server.js"],"names":["App","React","express","configureStore","StaticRouter","renderToString","Provider","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","req","res","context","initialStateUsers","data","isAuth","token","premium","paycode","preloadedState","users","store","markup","url","redirect","status","send"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,kBAAkB,GAAG,CAACL,MAAD,EAASM,UAAT,KAAwB;AAC/C,SAAON,MAAM,CAACM,UAAD,CAAN,GACDN,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,GACIP,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,CACKC,GADL,CACUC,KAAD,IAAY,gCAA+BA,KAAM,IAD1D,EAEKC,IAFL,CAEU,EAFV,CADJ,GAII,EALH,GAMD,EANN;AAOH,CARD;;AAUA,MAAMC,sBAAsB,GAAG,CAACX,MAAD,EAASM,UAAT,EAAqBM,KAAK,GAAG,EAA7B,KAAoC;AAC/D,SAAOZ,MAAM,CAACM,UAAD,CAAN,GACDN,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,GACIb,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,CACKL,GADL,CACUC,KAAD,IAAY,gBAAeA,KAAM,IAAGG,KAAM,YADnD,EAEKF,IAFL,CAEU,EAFV,CADJ,GAII,EALH,GAMD,EANN;AAOH,CARD;;AAUA,MAAMI,MAAM,GAAGnB,OAAO,EAAtB;AACAmB,MAAM,CACDC,OADL,CACa,cADb,EAEKC,GAFL,CAESrB,OAAO,CAACsB,MAAR,CAAef,OAAO,CAACC,GAAR,CAAYe,iBAA3B,CAFT,EAGKC,GAHL,CAGS,IAHT,EAGe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrB,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,iBAAiB,GAAG;AACtBC,IAAAA,IAAI,EAAE,EADgB;AAEtBC,IAAAA,MAAM,EAAE,KAFc;AAGtBC,IAAAA,KAAK,EAAE,IAHe;AAItBC,IAAAA,OAAO,EAAE,KAJa;AAKtBC,IAAAA,OAAO,EAAE;AALa,GAA1B,CAFqB,CAUrB;;AACA,QAAMC,cAAc,GAAG;AAAEC,IAAAA,KAAK,EAAEP;AAAT,GAAvB,CAXqB,CAarB;;AACA,QAAMQ,KAAK,GAAGnC,cAAc,CAACiC,cAAD,CAA5B;AAEA,QAAMG,MAAM,GAAGlC,cAAc,CACzB,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEiC;AAAjB,KACI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAET,OAAvB;AAAgC,IAAA,QAAQ,EAAEF,GAAG,CAACa;AAA9C,KACI,MAAC,GAAD,OADJ,CADJ,CADyB,CAA7B;;AAQA,MAAIX,OAAO,CAACW,GAAZ,EAAiB;AACbZ,IAAAA,GAAG,CAACa,QAAJ,CAAaZ,OAAO,CAACW,GAArB;AACH,GAFD,MAEO;AACHZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU/B,kBAAkB,CAACL,MAAD,EAAS,QAAT,CAAmB;AAC/C;AACA;AACA,yBAAyBgC,MAAO;AAChC,UAAUrB,sBAAsB,CAACX,MAAD,EAAS,QAAT,EAAmB,oBAAnB,CAAyC;AACzE;AACA,QAdY;AAgBH;AACJ,CA/CL;AAiDA,eAAec,MAAf","sourcesContent":["import App from \"./App\"\nimport React from \"react\"\nimport express from \"express\"\nimport configureStore from \"./redux/store\"\nimport { StaticRouter } from \"react-router-dom\"\nimport { renderToString } from \"react-dom/server\"\nimport { Provider } from \"react-redux\"\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n    return assets[entrypoint]\n        ? assets[entrypoint].css\n            ? assets[entrypoint].css\n                  .map((asset) => `<link rel=\"stylesheet\" href=\"${asset}\">`)\n                  .join(\"\")\n            : \"\"\n        : \"\"\n}\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = \"\") => {\n    return assets[entrypoint]\n        ? assets[entrypoint].js\n            ? assets[entrypoint].js\n                  .map((asset) => `<script src=\"${asset}\"${extra}></script>`)\n                  .join(\"\")\n            : \"\"\n        : \"\"\n}\n\nconst server = express()\nserver\n    .disable(\"x-powered-by\")\n    .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n    .get(\"/*\", (req, res) => {\n        const context = {}\n        const initialStateUsers = {\n            data: {},\n            isAuth: false,\n            token: null,\n            premium: false,\n            paycode: \"\",\n        }\n\n        // Compile an initial state\n        const preloadedState = { users: initialStateUsers }\n\n        // Create a new Redux store instance\n        const store = configureStore(preloadedState)\n\n        const markup = renderToString(\n            <Provider store={store}>\n                <StaticRouter context={context} location={req.url}>\n                    <App />\n                </StaticRouter>\n            </Provider>\n        )\n\n        if (context.url) {\n            res.redirect(context.url)\n        } else {\n            res.status(200).send(\n                `<!doctype html>\n    <html lang=\"\">\n    <head>\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta charset=\"utf-8\" />\n        <title>Welcome to Razzle</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        ${cssLinksFromAssets(assets, \"client\")}\n    </head>\n    <body>\n        <div id=\"root\">${markup}</div>\n        ${jsScriptTagsFromAssets(assets, \"client\", \" defer crossorigin\")}\n    </body>\n</html>`\n            )\n        }\n    })\n\nexport default server\n"]},"metadata":{},"sourceType":"module"}