{"ast":null,"code":"var __jsx = React.createElement;\nimport \"./scss/style.scoped.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport api from \"helpers/api\";\nimport Notify from \"components/NotifMsg/NotifyMsg\";\n\nfunction ModalNotfi(props) {\n  let isOpen = props.open ? \"show\" : \"hide\";\n  const doRequest = new api(props.tokens).req;\n  const {\n    addToast\n  } = useToasts();\n  const {\n    0: isReadNotif,\n    1: setIsReadNotif\n  } = useState(false);\n  const {\n    0: ReadNotifId,\n    1: setReadNotifId\n  } = useState(0);\n  const {\n    0: notifMessage,\n    1: setNotifMessage\n  } = useState([]);\n  const {\n    0: newNotif,\n    1: setNewNotif\n  } = useState([]);\n  useEffect(() => {\n    if (props.open) {\n      getMessageNotif();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.open]);\n\n  const getMessageNotif = () => {\n    doRequest({\n      method: \"GET\",\n      url: `notif?page=1&per_page=5&order[id_notif]=DESC`\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      const newMsg = data.filter(val => {\n        return val.is_read_notif !== \"1\";\n      });\n      setNewNotif(newMsg);\n      setNotifMessage(data);\n    }).catch(er => {\n      addToast(\"Something happen with notif\", {\n        appearance: \"error\"\n      });\n    });\n  };\n\n  const onReadNotif = id => {\n    setIsReadNotif(true);\n    setReadNotifId(id);\n  };\n\n  const onDeleteNotif = () => {\n    setIsReadNotif(false);\n    doRequest({\n      method: \"DELETE\",\n      url: `notif`,\n      data: {\n        id: ReadNotifId\n      }\n    }).then(() => {\n      getMessageNotif();\n    }).catch(er => {\n      addToast(\"Something happen with notif\", {\n        appearance: \"error\"\n      });\n    });\n  };\n\n  const notReadNotif = () => {\n    setIsReadNotif(false);\n    doRequest({\n      method: \"PUT\",\n      url: `notif`,\n      data: {\n        id: ReadNotifId\n      }\n    }).then(() => {\n      getMessageNotif();\n    }).catch(er => {\n      addToast(\"Something happen with notif\", {\n        appearance: \"error\"\n      });\n    });\n  };\n\n  const toggle = () => {\n    props.toggleModal();\n  };\n\n  return __jsx(\"div\", {\n    className: `container ${isOpen}`\n  }, __jsx(\"div\", {\n    className: \"modal-cos\"\n  }, __jsx(\"section\", {\n    className: \"panel bg-white\"\n  }, __jsx(\"div\", {\n    className: \"header-modal panel-heading b-light bg-light\"\n  }, __jsx(\"div\", {\n    className: \"btn-close\",\n    onClick: toggle\n  }, __jsx(\"i\", {\n    className: \"icon-close\"\n  })), __jsx(\"div\", {\n    className: \"judul\"\n  }, __jsx(\"span\", {\n    className: \"hidden-nav-xs padder m-t m-b-sm text-judul\"\n  }, newNotif.length > 0 ? __jsx(\"strong\", null, \"You have \", __jsx(\"span\", {\n    className: \"count\"\n  }, newNotif.length), \" \", \"notifications\") : __jsx(\"strong\", null, \"notifications\")))), __jsx(\"div\", {\n    className: \"list-group list-group-alt listcon\"\n  }, notifMessage.map(val => {\n    const haveReading = val.is_read_notif === \"1\";\n    return __jsx(Notify, {\n      key: val.id_notif,\n      id: val.id_notif,\n      title: val.title_notif,\n      time: val.send_notif,\n      haveread: haveReading,\n      message: val.text_1_notif,\n      isRead: isReadNotif,\n      readId: ReadNotifId,\n      reading: onReadNotif\n    });\n  })), __jsx(\"div\", {\n    className: `panel-footer text-sm foot ${isReadNotif ? \"\" : \"hide\"}`\n  }, __jsx(Link, {\n    to: \"#\",\n    className: \"pull-left\",\n    onClick: onDeleteNotif\n  }, __jsx(\"i\", {\n    className: \"icon-trash m-r-xs\"\n  }), __jsx(\"small\", {\n    className: \"text-muted\"\n  }, \"Delet\")), __jsx(Link, {\n    to: \"#\",\n    className: \"pull-right\",\n    onClick: notReadNotif\n  }, __jsx(\"i\", {\n    className: \"fa fa-chevron-left m-r-xs\"\n  }), __jsx(\"small\", {\n    className: \"text-muted\"\n  }, \"Back\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.data,\n    isAuth: state.users.isAuth,\n    tokens: state.users.token,\n    isPremium: state.users.premium,\n    paycode: state.users.paycode,\n    timers: state.timers,\n    payment: state.payment\n  };\n};\n\nexport default connect(mapStateToProps)(ModalNotfi);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/ModalNotif/ModalNotfi.jsx"],"names":["React","useState","useEffect","Link","connect","useToasts","api","Notify","ModalNotfi","props","isOpen","open","doRequest","tokens","req","addToast","isReadNotif","setIsReadNotif","ReadNotifId","setReadNotifId","notifMessage","setNotifMessage","newNotif","setNewNotif","getMessageNotif","method","url","then","res","data","newMsg","filter","val","is_read_notif","catch","er","appearance","onReadNotif","id","onDeleteNotif","notReadNotif","toggle","toggleModal","length","map","haveReading","id_notif","title_notif","send_notif","text_1_notif","mapStateToProps","state","users","isAuth","token","isPremium","premium","paycode","timers","payment"],"mappings":"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","sourcesContent":["import \"./scss/style.scoped.scss\"\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { useToasts } from \"react-toast-notifications\"\nimport api from \"helpers/api\"\nimport Notify from \"components/NotifMsg/NotifyMsg\"\n\nfunction ModalNotfi(props) {\n    let isOpen = props.open ? \"show\" : \"hide\"\n    const doRequest = new api(props.tokens).req\n    const { addToast } = useToasts()\n\n    const [isReadNotif, setIsReadNotif] = useState(false)\n    const [ReadNotifId, setReadNotifId] = useState(0)\n    const [notifMessage, setNotifMessage] = useState([])\n    const [newNotif, setNewNotif] = useState([])\n\n    useEffect(() => {\n        if (props.open) {\n            getMessageNotif()\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open])\n\n    const getMessageNotif = () => {\n        doRequest({\n            method: \"GET\",\n            url: `notif?page=1&per_page=5&order[id_notif]=DESC`,\n        })\n            .then((res) => {\n                const { data } = res.data\n                const newMsg = data.filter((val) => {\n                    return val.is_read_notif !== \"1\"\n                })\n                setNewNotif(newMsg)\n                setNotifMessage(data)\n            })\n            .catch((er) => {\n                addToast(\"Something happen with notif\", { appearance: \"error\" })\n            })\n    }\n\n    const onReadNotif = (id) => {\n        setIsReadNotif(true)\n        setReadNotifId(id)\n    }\n\n    const onDeleteNotif = () => {\n        setIsReadNotif(false)\n        doRequest({\n            method: \"DELETE\",\n            url: `notif`,\n            data: { id: ReadNotifId },\n        })\n            .then(() => {\n                getMessageNotif()\n            })\n            .catch((er) => {\n                addToast(\"Something happen with notif\", { appearance: \"error\" })\n            })\n    }\n    const notReadNotif = () => {\n        setIsReadNotif(false)\n        doRequest({\n            method: \"PUT\",\n            url: `notif`,\n            data: { id: ReadNotifId },\n        })\n            .then(() => {\n                getMessageNotif()\n            })\n            .catch((er) => {\n                addToast(\"Something happen with notif\", { appearance: \"error\" })\n            })\n    }\n\n    const toggle = () => {\n        props.toggleModal()\n    }\n\n    return (\n        <div className={`container ${isOpen}`}>\n            <div className=\"modal-cos\">\n                <section className=\"panel bg-white\">\n                    <div className=\"header-modal panel-heading b-light bg-light\">\n                        <div className=\"btn-close\" onClick={toggle}>\n                            <i className=\"icon-close\" />\n                        </div>\n                        <div className=\"judul\">\n                            <span className=\"hidden-nav-xs padder m-t m-b-sm text-judul\">\n                                {newNotif.length > 0 ? (\n                                    <strong>\n                                        You have <span className=\"count\">{newNotif.length}</span>{\" \"}\n                                        notifications\n                                    </strong>\n                                ) : (\n                                    <strong>notifications</strong>\n                                )}\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"list-group list-group-alt listcon\">\n                        {notifMessage.map((val) => {\n                            const haveReading = val.is_read_notif === \"1\"\n                            return (\n                                <Notify\n                                    key={val.id_notif}\n                                    id={val.id_notif}\n                                    title={val.title_notif}\n                                    time={val.send_notif}\n                                    haveread={haveReading}\n                                    message={val.text_1_notif}\n                                    isRead={isReadNotif}\n                                    readId={ReadNotifId}\n                                    reading={onReadNotif}\n                                />\n                            )\n                        })}\n                    </div>\n                    <div className={`panel-footer text-sm foot ${isReadNotif ? \"\" : \"hide\"}`}>\n                        <Link to=\"#\" className=\"pull-left\" onClick={onDeleteNotif}>\n                            <i className=\"icon-trash m-r-xs\" />\n                            <small className=\"text-muted\">Delet</small>\n                        </Link>\n                        <Link to=\"#\" className=\"pull-right\" onClick={notReadNotif}>\n                            <i className=\"fa fa-chevron-left m-r-xs\" />\n                            <small className=\"text-muted\">Back</small>\n                        </Link>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users.data,\n        isAuth: state.users.isAuth,\n        tokens: state.users.token,\n        isPremium: state.users.premium,\n        paycode: state.users.paycode,\n        timers: state.timers,\n        payment: state.payment,\n    }\n}\n\nexport default connect(mapStateToProps)(ModalNotfi)\n"]},"metadata":{},"sourceType":"module"}