{"ast":null,"code":"var _jsxFileName = \"/home/ab/Code/reactJs/razzel/src/components/ImageCroper/ImageCrop.jsx\";\nvar __jsx = React.createElement;\nimport \"./scss/style.scoped.scss\";\nimport React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cropper from \"react-easy-crop\";\nimport Slider from \"rc-slider\";\nimport getCroppedImg from \"helpers/cropImage\";\n\nfunction ImageCrop(props) {\n  const {\n    0: crop,\n    1: setCrop\n  } = useState({\n    x: 0,\n    y: 0\n  });\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(1);\n  const {\n    0: croppedAreaPixels,\n    1: setCroppedAreaPixels\n  } = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const saveCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(props.image, croppedAreaPixels);\n      props.save(croppedImage);\n    } catch (e) {\n      console.error(e);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [croppedAreaPixels]);\n  return __jsx(\"div\", {\n    className: \"modal-crop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-close\",\n    onClick: () => {\n      props.close();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cropCon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Cropper, {\n    image: props.image,\n    crop: crop,\n    zoom: zoom,\n    aspect: props.ratio,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cropControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"zoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"ZOOM Image\"), __jsx(Slider, {\n    value: zoom,\n    min: 1,\n    max: 3,\n    step: 0.1,\n    onChange: val => {\n      setZoom(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"btn-save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    className: `btn btn-success`,\n    to: \"#\",\n    onClick: saveCroppedImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Save\"), __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text-active\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), __jsx(\"span\", {\n    className: \"text-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Wait..\")))));\n}\n\nexport default ImageCrop;","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/ImageCroper/ImageCrop.jsx"],"names":["React","useState","useCallback","Link","Cropper","Slider","getCroppedImg","ImageCrop","props","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","saveCroppedImage","croppedImage","image","save","e","console","error","close","ratio","val","marginRight"],"mappings":"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","sourcesContent":["import \"./scss/style.scoped.scss\"\nimport React, { useState, useCallback } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Cropper from \"react-easy-crop\"\nimport Slider from \"rc-slider\"\nimport getCroppedImg from \"helpers/cropImage\"\n\nfunction ImageCrop(props) {\n    const [crop, setCrop] = useState({ x: 0, y: 0 })\n    const [zoom, setZoom] = useState(1)\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\n\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n        setCroppedAreaPixels(croppedAreaPixels)\n    }, [])\n\n    const saveCroppedImage = useCallback(async () => {\n        try {\n            const croppedImage = await getCroppedImg(props.image, croppedAreaPixels)\n            props.save(croppedImage)\n        } catch (e) {\n            console.error(e)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [croppedAreaPixels])\n\n    return (\n        <div className=\"modal-crop\">\n            <div\n                className=\"btn-close\"\n                onClick={() => {\n                    props.close()\n                }}\n            >\n                <i className=\"icon-close\" />\n            </div>\n            <div className=\"cropCon\">\n                <Cropper\n                    image={props.image}\n                    crop={crop}\n                    zoom={zoom}\n                    aspect={props.ratio}\n                    onCropChange={setCrop}\n                    onCropComplete={onCropComplete}\n                    onZoomChange={setZoom}\n                />\n            </div>\n            <div className=\"cropControl\">\n                <div className=\"zoom\">\n                    <h4>ZOOM Image</h4>\n                    <Slider\n                        value={zoom}\n                        min={1}\n                        max={3}\n                        step={0.1}\n                        onChange={(val) => {\n                            setZoom(val)\n                        }}\n                    />\n                </div>\n                <div className=\"btn-save\">\n                    <Link className={`btn btn-success`} to=\"#\" onClick={saveCroppedImage}>\n                        <span className=\"text\">Save</span>\n                        <i\n                            className=\"fa fa-spin fa-spinner text-active\"\n                            style={{ marginRight: \"10px\" }}\n                        />\n                        <span className=\"text-active\">Wait..</span>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageCrop\n"]},"metadata":{},"sourceType":"module"}