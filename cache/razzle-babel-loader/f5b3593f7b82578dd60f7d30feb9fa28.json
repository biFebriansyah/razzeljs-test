{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"helpers/api\";\nimport { useDropzone } from \"react-dropzone\";\nimport { connect } from \"react-redux\";\nimport { OptionsContext } from \"helpers/contex\";\nimport ImageCroper from \"components/ImageCroper/ImageCrop\";\nimport { useToasts } from \"react-toast-notifications\";\nimport \"./scss/style.scoped.scss\";\n\nfunction CreateList(props) {\n  const isOpen = props.open ? \"show\" : \"hide\";\n  let defaultImage = \"https://res.cloudinary.com/devops2/image/upload/v1612864760/musicfly/m40_x31sif.jpg\";\n  const {\n    0: ListName,\n    1: setListName\n  } = useState(\"Masuk Nama\");\n  const {\n    0: onLoading,\n    1: setOnLoading\n  } = useState(false);\n  const {\n    0: codeList,\n    1: SetCodeList\n  } = useState(\"\");\n  const {\n    0: imageList,\n    1: setImageList\n  } = useState(null);\n  const {\n    0: imageFile,\n    1: setImageFile\n  } = useState(null);\n  const {\n    0: cropOpen,\n    1: setCropOpen\n  } = useState(false);\n  const {\n    0: isUpdate,\n    1: setIsUpdate\n  } = useState(false);\n  const {\n    0: LisData,\n    1: setListData\n  } = useState({});\n  const {\n    0: croppedImage,\n    1: setCroppedImage\n  } = useState(null);\n  const {\n    changeList\n  } = useContext(OptionsContext);\n  const {\n    getRootProps,\n    getInputProps,\n    open,\n    acceptedFiles\n  } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyboard: true,\n    noClick: true\n  });\n  const {\n    addToast\n  } = useToasts();\n  useEffect(() => {\n    if (props.id !== null) {\n      const apis = new api(props.tokens);\n      const {\n        username_personal\n      } = props.users.data;\n      apis.req({\n        method: \"GET\",\n        url: `/playlist?order[id_playlist]=ASC&per_page=2&page=1&active=1&user_playlist=${username_personal}&id_playlist=${props.id}`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n\n        const newData = _objectSpread(_objectSpread({}, data[0]), {}, {\n          foto_path_playlist: data[0].foto_path_playlist ? data[0].foto_path_playlist : defaultImage\n        });\n\n        setListName(newData.complete_name_playlist);\n        setListData(newData);\n        SetCodeList(newData.object_code_playlist);\n        setIsUpdate(true);\n      }).catch(er => {\n        console.log(er);\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.id]);\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      acceptedFiles.map(data => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          const file = reader.result;\n          setImageList(file);\n        };\n\n        reader.readAsDataURL(data);\n        return true;\n      });\n      setCropOpen(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [acceptedFiles]);\n\n  const toggle = () => {\n    setImageList(defaultImage);\n    setIsUpdate(false);\n    setCropOpen(false);\n    setListName(\"Masukan Nama\");\n    setCroppedImage(null);\n    setImageFile(null);\n    props.toggleModal();\n  };\n\n  const SaveImage = data => {\n    setCroppedImage(data.image);\n    setImageFile(data.file);\n    setCropOpen(false);\n  };\n\n  const inputChange = el => {\n    setListName(el.target.value);\n  };\n\n  const getListLength = () => {\n    return new Promise((resolve, reject) => {\n      const apis = new api(props.tokens);\n      const {\n        username_personal\n      } = props.users.data;\n      apis.req({\n        method: \"GET\",\n        url: `/playlist?order[id_playlist]=ASC&per_page=999&page=1&active=1&user_playlist=${username_personal}`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        resolve(data.length);\n      }).catch(er => {\n        reject(er);\n      });\n    });\n  };\n\n  const saveList = async () => {\n    setOnLoading(true);\n    const apis = new api(props.tokens);\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"complete_name\", ListName);\n\n    if (imageFile) {\n      bodyFormData.append(\"file\", imageFile);\n    } else {\n      bodyFormData.append(\"file\", defaultImage);\n    }\n\n    apis.FormData({\n      method: \"POST\",\n      url: `/playlist`,\n      data: bodyFormData\n    }).then(async () => {\n      const newLength = await getListLength();\n      setOnLoading(false);\n      addToast(`${ListName} Berhasil dibuat`, {\n        appearance: \"success\"\n      });\n      changeList(newLength);\n      toggle();\n    }).catch(er => {\n      setOnLoading(false);\n      addToast(`${ListName} gagal dibuat`, {\n        appearance: \"error\"\n      });\n    });\n  };\n\n  const UpdateListPic = () => {\n    return new Promise((resolve, reject) => {\n      const apis = new api(props.tokens);\n      const bodyFormData = new FormData();\n      bodyFormData.append(\"file\", imageFile);\n      bodyFormData.append(\"playlist_code\", codeList);\n      apis.FormData({\n        method: \"POST\",\n        url: `/playlist/upload/foto`,\n        data: bodyFormData\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        resolve(data);\n      }).catch(er => {\n        reject(er);\n      });\n    });\n  };\n\n  const UpdateList = async () => {\n    setOnLoading(true);\n    const apis = new api(props.tokens);\n    apis.req({\n      method: \"PUT\",\n      url: \"/playlist\",\n      data: {\n        id: props.id,\n        complete_name: ListName,\n        description: \"List Favorite Playlist\"\n      }\n    }).then(async () => {\n      if (imageFile) {\n        await UpdateListPic();\n      }\n\n      setOnLoading(false);\n      changeList(Math.floor(Math.random() * 20) + 1);\n      addToast(`${ListName} Berhasil dupdate`, {\n        appearance: \"success\"\n      });\n      toggle();\n    }).catch(er => {\n      setOnLoading(false);\n      addToast(`${ListName} gagal dupdate`, {\n        appearance: \"error\"\n      });\n    });\n  };\n\n  const onLoadStyle = {\n    width: \"100%\",\n    height: \"100vh\",\n    display: onLoading ? \"flex\" : \"none\",\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: \"40px\",\n    backdropFilter: \"blur(1px)\",\n    color: \"white\",\n    zIndex: 9999\n  };\n  return __jsx(\"div\", {\n    className: `container ${isOpen}`\n  }, __jsx(\"div\", {\n    style: onLoadStyle\n  }, __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text\",\n    style: {\n      marginRight: \"10px\"\n    }\n  }), __jsx(\"span\", {\n    className: \"text\"\n  }, \"Wait..\")), cropOpen ? __jsx(ImageCroper, {\n    image: imageList,\n    save: SaveImage,\n    ratio: 16 / 9,\n    close: () => setCropOpen(false)\n  }) : __jsx(\"div\", {\n    className: \"modal-cos\"\n  }, __jsx(\"div\", {\n    className: \"btn-close\",\n    onClick: toggle\n  }, __jsx(\"i\", {\n    className: \"icon-close\"\n  })), __jsx(\"div\", _extends({}, getRootProps({\n    className: \"dropzone\"\n  }), {\n    className: \"m-t-n-xxs item pos-rlt\"\n  }), __jsx(\"input\", getInputProps()), __jsx(\"div\", {\n    className: \"center text-center m-t-n choose-image\"\n  }, __jsx(Link, {\n    to: \"#\",\n    \"data-toggle\": \"class\",\n    onClick: open\n  }, __jsx(\"i\", {\n    className: \"fa fa-file i-2x text text-image\"\n  }), __jsx(\"h3\", {\n    className: \"text-image\"\n  }, \"Choose image\"))), __jsx(\"div\", {\n    className: \"bottom gd bg-info wrapper-lg container-btn\"\n  }, __jsx(\"div\", {\n    className: \"inpform\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"h2 font-thin\",\n    autoFocus: true,\n    name: \"username\",\n    autoComplete: \"off\",\n    onChange: inputChange,\n    value: ListName\n  })), __jsx(Link, {\n    className: `btn btn-Black`,\n    to: \"#\",\n    onClick: isUpdate ? UpdateList : saveList\n  }, __jsx(\"span\", {\n    className: \"text\"\n  }, \"Save\"), __jsx(\"i\", {\n    className: \"fa fa-spin fa-spinner text-active\",\n    style: {\n      marginRight: \"10px\"\n    }\n  }), __jsx(\"span\", {\n    className: \"text-active\"\n  }, \"Wait..\"))), __jsx(\"div\", {\n    className: \"imageCover\"\n  }, __jsx(\"img\", {\n    className: \"img-full\",\n    src: isUpdate && croppedImage === null ? LisData.foto_path_playlist : croppedImage !== null ? croppedImage : defaultImage,\n    alt: \"...\"\n  })))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    tokens: state.users.token\n  };\n};\n\nexport default connect(mapStateToProps)(CreateList);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/CreatePlayList/CreateList.jsx"],"names":["React","useState","useContext","useEffect","Link","api","useDropzone","connect","OptionsContext","ImageCroper","useToasts","CreateList","props","isOpen","open","defaultImage","ListName","setListName","onLoading","setOnLoading","codeList","SetCodeList","imageList","setImageList","imageFile","setImageFile","cropOpen","setCropOpen","isUpdate","setIsUpdate","LisData","setListData","croppedImage","setCroppedImage","changeList","getRootProps","getInputProps","acceptedFiles","accept","noKeyboard","noClick","addToast","id","apis","tokens","username_personal","users","data","req","method","url","then","res","newData","foto_path_playlist","complete_name_playlist","object_code_playlist","catch","er","console","log","length","map","reader","FileReader","onload","file","result","readAsDataURL","toggle","toggleModal","SaveImage","image","inputChange","el","target","value","getListLength","Promise","resolve","reject","saveList","bodyFormData","FormData","append","newLength","appearance","UpdateListPic","UpdateList","complete_name","description","Math","floor","random","onLoadStyle","width","height","display","position","justifyContent","alignItems","fontSize","backdropFilter","color","zIndex","marginRight","className","mapStateToProps","state","token"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport api from \"helpers/api\"\nimport { useDropzone } from \"react-dropzone\"\nimport { connect } from \"react-redux\"\nimport { OptionsContext } from \"helpers/contex\"\nimport ImageCroper from \"components/ImageCroper/ImageCrop\"\nimport { useToasts } from \"react-toast-notifications\"\nimport \"./scss/style.scoped.scss\"\n\nfunction CreateList(props) {\n    const isOpen = props.open ? \"show\" : \"hide\"\n    let defaultImage =\n        \"https://res.cloudinary.com/devops2/image/upload/v1612864760/musicfly/m40_x31sif.jpg\"\n    const [ListName, setListName] = useState(\"Masuk Nama\")\n    const [onLoading, setOnLoading] = useState(false)\n    const [codeList, SetCodeList] = useState(\"\")\n    const [imageList, setImageList] = useState(null)\n    const [imageFile, setImageFile] = useState(null)\n    const [cropOpen, setCropOpen] = useState(false)\n    const [isUpdate, setIsUpdate] = useState(false)\n    const [LisData, setListData] = useState({})\n    const [croppedImage, setCroppedImage] = useState(null)\n    const { changeList } = useContext(OptionsContext)\n    const { getRootProps, getInputProps, open, acceptedFiles } = useDropzone({\n        accept: \"image/jpeg, image/png\",\n        noKeyboard: true,\n        noClick: true,\n    })\n    const { addToast } = useToasts()\n\n    useEffect(() => {\n        if (props.id !== null) {\n            const apis = new api(props.tokens)\n            const { username_personal } = props.users.data\n            apis.req({\n                method: \"GET\",\n                url: `/playlist?order[id_playlist]=ASC&per_page=2&page=1&active=1&user_playlist=${username_personal}&id_playlist=${\n                    props.id\n                }`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    const newData = {\n                        ...data[0],\n                        foto_path_playlist: data[0].foto_path_playlist\n                            ? data[0].foto_path_playlist\n                            : defaultImage,\n                    }\n                    setListName(newData.complete_name_playlist)\n                    setListData(newData)\n                    SetCodeList(newData.object_code_playlist)\n                    setIsUpdate(true)\n                })\n                .catch((er) => {\n                    console.log(er)\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.id])\n\n    useEffect(() => {\n        if (acceptedFiles.length > 0) {\n            acceptedFiles.map((data) => {\n                const reader = new FileReader()\n                reader.onload = () => {\n                    const file = reader.result\n                    setImageList(file)\n                }\n                reader.readAsDataURL(data)\n                return true\n            })\n            setCropOpen(true)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [acceptedFiles])\n\n    const toggle = () => {\n        setImageList(defaultImage)\n        setIsUpdate(false)\n        setCropOpen(false)\n        setListName(\"Masukan Nama\")\n        setCroppedImage(null)\n        setImageFile(null)\n        props.toggleModal()\n    }\n\n    const SaveImage = (data) => {\n        setCroppedImage(data.image)\n        setImageFile(data.file)\n        setCropOpen(false)\n    }\n\n    const inputChange = (el) => {\n        setListName(el.target.value)\n    }\n\n    const getListLength = () => {\n        return new Promise((resolve, reject) => {\n            const apis = new api(props.tokens)\n            const { username_personal } = props.users.data\n            apis.req({\n                method: \"GET\",\n                url: `/playlist?order[id_playlist]=ASC&per_page=999&page=1&active=1&user_playlist=${username_personal}`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data.length)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    const saveList = async () => {\n        setOnLoading(true)\n        const apis = new api(props.tokens)\n        const bodyFormData = new FormData()\n        bodyFormData.append(\"complete_name\", ListName)\n        if (imageFile) {\n            bodyFormData.append(\"file\", imageFile)\n        } else {\n            bodyFormData.append(\"file\", defaultImage)\n        }\n        apis.FormData({\n            method: \"POST\",\n            url: `/playlist`,\n            data: bodyFormData,\n        })\n            .then(async () => {\n                const newLength = await getListLength()\n                setOnLoading(false)\n                addToast(`${ListName} Berhasil dibuat`, { appearance: \"success\" })\n                changeList(newLength)\n                toggle()\n            })\n            .catch((er) => {\n                setOnLoading(false)\n                addToast(`${ListName} gagal dibuat`, { appearance: \"error\" })\n            })\n    }\n\n    const UpdateListPic = () => {\n        return new Promise((resolve, reject) => {\n            const apis = new api(props.tokens)\n            const bodyFormData = new FormData()\n            bodyFormData.append(\"file\", imageFile)\n            bodyFormData.append(\"playlist_code\", codeList)\n            apis.FormData({\n                method: \"POST\",\n                url: `/playlist/upload/foto`,\n                data: bodyFormData,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    const UpdateList = async () => {\n        setOnLoading(true)\n        const apis = new api(props.tokens)\n        apis.req({\n            method: \"PUT\",\n            url: \"/playlist\",\n            data: {\n                id: props.id,\n                complete_name: ListName,\n                description: \"List Favorite Playlist\",\n            },\n        })\n            .then(async () => {\n                if (imageFile) {\n                    await UpdateListPic()\n                }\n                setOnLoading(false)\n                changeList(Math.floor(Math.random() * 20) + 1)\n                addToast(`${ListName} Berhasil dupdate`, { appearance: \"success\" })\n                toggle()\n            })\n            .catch((er) => {\n                setOnLoading(false)\n                addToast(`${ListName} gagal dupdate`, { appearance: \"error\" })\n            })\n    }\n\n    const onLoadStyle = {\n        width: \"100%\",\n        height: \"100vh\",\n        display: onLoading ? \"flex\" : \"none\",\n        position: \"absolute\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: \"40px\",\n        backdropFilter: \"blur(1px)\",\n        color: \"white\",\n        zIndex: 9999,\n    }\n\n    return (\n        <div className={`container ${isOpen}`}>\n            <div style={onLoadStyle}>\n                <i className=\"fa fa-spin fa-spinner text\" style={{ marginRight: \"10px\" }} />\n                <span className=\"text\">Wait..</span>\n            </div>\n            {cropOpen ? (\n                <ImageCroper\n                    image={imageList}\n                    save={SaveImage}\n                    ratio={16 / 9}\n                    close={() => setCropOpen(false)}\n                />\n            ) : (\n                <div className=\"modal-cos\">\n                    <div className=\"btn-close\" onClick={toggle}>\n                        <i className=\"icon-close\" />\n                    </div>\n                    <div\n                        {...getRootProps({ className: \"dropzone\" })}\n                        className=\"m-t-n-xxs item pos-rlt\"\n                    >\n                        <input {...getInputProps()} />\n                        <div className=\"center text-center m-t-n choose-image\">\n                            <Link to=\"#\" data-toggle=\"class\" onClick={open}>\n                                <i className=\"fa fa-file i-2x text text-image\" />\n                                <h3 className=\"text-image\">Choose image</h3>\n                            </Link>\n                        </div>\n                        <div className=\"bottom gd bg-info wrapper-lg container-btn\">\n                            <div className=\"inpform\">\n                                <input\n                                    type=\"text\"\n                                    className=\"h2 font-thin\"\n                                    autoFocus={true}\n                                    name=\"username\"\n                                    autoComplete=\"off\"\n                                    onChange={inputChange}\n                                    value={ListName}\n                                />\n                            </div>\n                            <Link\n                                className={`btn btn-Black`}\n                                to=\"#\"\n                                onClick={isUpdate ? UpdateList : saveList}\n                            >\n                                <span className=\"text\">Save</span>\n                                <i\n                                    className=\"fa fa-spin fa-spinner text-active\"\n                                    style={{ marginRight: \"10px\" }}\n                                />\n                                <span className=\"text-active\">Wait..</span>\n                            </Link>\n                        </div>\n                        <div className=\"imageCover\">\n                            <img\n                                className=\"img-full\"\n                                src={\n                                    isUpdate && croppedImage === null\n                                        ? LisData.foto_path_playlist\n                                        : croppedImage !== null\n                                        ? croppedImage\n                                        : defaultImage\n                                }\n                                alt=\"...\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        tokens: state.users.token,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateList)\n"]},"metadata":{},"sourceType":"module"}