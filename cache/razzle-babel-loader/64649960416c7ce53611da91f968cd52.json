{"ast":null,"code":"var _jsxFileName = \"/home/ab/Code/reactJs/razzel/src/views/Seacrh/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { OptionsContext } from \"helpers/contex\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"redux/actions/users\";\nimport { bindActionCreators } from \"redux\";\nimport Cards from \"components/_Crads\";\nimport CircleCard from \"components/_CradsCircle\";\nimport api from \"helpers/api\";\nimport Loader from \"components/loaderCards/LoaderCards\";\nimport \"./css/style.scoped.css\";\n\nfunction Search(props) {\n  const doRequest = new api(props.tokens).req;\n  const lokasi = useLocation();\n  const {\n    setTheme\n  } = useContext(OptionsContext);\n  const {\n    0: Songs,\n    1: setSongs\n  } = useState([]);\n  const {\n    0: CurrentLoc,\n    1: SetCurrentLoc\n  } = useState(\"\");\n  const {\n    0: Artis,\n    1: setArtis\n  } = useState([]);\n  const {\n    0: isLoad,\n    1: SetIsLoad\n  } = useState(false);\n  const {\n    0: count\n  } = useState(24);\n  const avatar = \"https://res.cloudinary.com/devops2/image/upload/v1610881331/musicfly/user_l3cqpi.png\";\n  useEffect(() => {\n    SetCurrentLoc(lokasi.pathname);\n\n    if (lokasi.pathname === \"/genres\") {\n      setTheme(\"bg-dark\", false);\n    } else if (lokasi.pathname === \"/listen\") {\n      setTheme(\"bg-listen\", true);\n    } else {\n      setTheme(\"bg-black\", true);\n    }\n\n    async function getData() {\n      try {\n        SetIsLoad(true);\n        const songs = await findSongs();\n        const artis = await findArtis();\n        setSongs(songs);\n        setArtis(artis);\n        SetIsLoad(false);\n      } catch (error) {\n        SetIsLoad(false);\n      }\n    }\n\n    if (props.kata !== \"\") {\n      getData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.kata]);\n  useEffect(() => {\n    if (CurrentLoc !== \"\" && lokasi.pathname !== CurrentLoc) {\n      props.onSeacrh(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [lokasi.pathname]);\n\n  const findArtis = () => {\n    return new Promise((resolve, reject) => {\n      doRequest({\n        method: \"GET\",\n        url: `artist?page=1&per_page=5&active=1&order[id_artist]=ASC&search=${props.kata}`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        resolve(data);\n      }).catch(er => {\n        reject(er);\n      });\n    });\n  };\n\n  const findSongs = () => {\n    return new Promise((resolve, reject) => {\n      doRequest({\n        method: \"GET\",\n        url: `music/all?page=1&per_page=8&order[id]=DESC&search=${props.kata}`\n      }).then(res => {\n        const {\n          data\n        } = res.data;\n        resolve(data);\n      }).catch(er => {\n        reject(er);\n      });\n    });\n  };\n\n  return __jsx(\"section\", {\n    className: \"scrollable padder-lg w-f-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"dicover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Songs\")), __jsx(\"div\", {\n    className: \"row row-sm cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isLoad ? Array(count).fill().map((_, index) => {\n    return __jsx(Loader, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 36\n      }\n    });\n  }) : Songs.length <= 0 ? __jsx(\"div\", {\n    className: \"notfound\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Songs \", props.kata, \" not found\")) : Songs.map(value => {\n    const data = {\n      id: value.id,\n      uuid: value.discovery_code,\n      name: value.music_title,\n      code: value.music_code,\n      artisCod: value.artis_code,\n      singer: value.artis_name,\n      cover: value.music_image_priority,\n      duration: value.music_duration,\n      musicSrc: value.music_storage_path\n    };\n    return __jsx(Cards, {\n      key: data.id,\n      idx: data.id,\n      name: data.name,\n      code: data.code,\n      artiscod: data.artisCod,\n      cover: data.cover,\n      singer: data.singer,\n      duration: data.duration,\n      loved: value.love_id,\n      songs: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    });\n  })), __jsx(\"div\", {\n    className: \"dicover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Artis\")), __jsx(\"div\", {\n    className: \"row row-sm cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, isLoad ? Array(count).fill().map((_, index) => {\n    return __jsx(Loader, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 36\n      }\n    });\n  }) : Artis.length <= 0 ? __jsx(\"div\", {\n    className: \"notfound\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Artis \", props.kata, \" not found\")) : Artis.map(value => {\n    const data = {\n      id: value.id_artist,\n      name: value.complete_name_artist,\n      code: value.code_artist,\n      image: value.foto_path_artist || avatar\n    };\n    return __jsx(CircleCard, {\n      key: data.id,\n      id: data.id,\n      name: data.name,\n      image: data.image,\n      code: data.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    });\n  })));\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    unsetAuth: bindActionCreators(logout, dispatch)\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    tokens: state.users.token,\n    isAuth: state.users.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/views/Seacrh/index.jsx"],"names":["React","useState","useEffect","useContext","useLocation","OptionsContext","connect","logout","bindActionCreators","Cards","CircleCard","api","Loader","Search","props","doRequest","tokens","req","lokasi","setTheme","Songs","setSongs","CurrentLoc","SetCurrentLoc","Artis","setArtis","isLoad","SetIsLoad","count","avatar","pathname","getData","songs","findSongs","artis","findArtis","error","kata","onSeacrh","Promise","resolve","reject","method","url","then","res","data","catch","er","Array","fill","map","_","index","length","value","id","uuid","discovery_code","name","music_title","code","music_code","artisCod","artis_code","singer","artis_name","cover","music_image_priority","duration","music_duration","musicSrc","music_storage_path","love_id","id_artist","complete_name_artist","code_artist","image","foto_path_artist","mapDispatchToProps","dispatch","unsetAuth","mapStateToProps","state","users","token","isAuth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport { OptionsContext } from \"helpers/contex\"\nimport { connect } from \"react-redux\"\nimport { logout } from \"redux/actions/users\"\nimport { bindActionCreators } from \"redux\"\nimport Cards from \"components/_Crads\"\nimport CircleCard from \"components/_CradsCircle\"\nimport api from \"helpers/api\"\nimport Loader from \"components/loaderCards/LoaderCards\"\nimport \"./css/style.scoped.css\"\n\nfunction Search(props) {\n    const doRequest = new api(props.tokens).req\n    const lokasi = useLocation()\n    const { setTheme } = useContext(OptionsContext)\n    const [Songs, setSongs] = useState([])\n    const [CurrentLoc, SetCurrentLoc] = useState(\"\")\n    const [Artis, setArtis] = useState([])\n    const [isLoad, SetIsLoad] = useState(false)\n    const [count] = useState(24)\n\n    const avatar =\n        \"https://res.cloudinary.com/devops2/image/upload/v1610881331/musicfly/user_l3cqpi.png\"\n\n    useEffect(() => {\n        SetCurrentLoc(lokasi.pathname)\n        if (lokasi.pathname === \"/genres\") {\n            setTheme(\"bg-dark\", false)\n        } else if (lokasi.pathname === \"/listen\") {\n            setTheme(\"bg-listen\", true)\n        } else {\n            setTheme(\"bg-black\", true)\n        }\n\n        async function getData() {\n            try {\n                SetIsLoad(true)\n                const songs = await findSongs()\n                const artis = await findArtis()\n                setSongs(songs)\n                setArtis(artis)\n                SetIsLoad(false)\n            } catch (error) {\n                SetIsLoad(false)\n            }\n        }\n\n        if (props.kata !== \"\") {\n            getData()\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.kata])\n\n    useEffect(() => {\n        if (CurrentLoc !== \"\" && lokasi.pathname !== CurrentLoc) {\n            props.onSeacrh(false)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lokasi.pathname])\n\n    const findArtis = () => {\n        return new Promise((resolve, reject) => {\n            doRequest({\n                method: \"GET\",\n                url: `artist?page=1&per_page=5&active=1&order[id_artist]=ASC&search=${props.kata}`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    const findSongs = () => {\n        return new Promise((resolve, reject) => {\n            doRequest({\n                method: \"GET\",\n                url: `music/all?page=1&per_page=8&order[id]=DESC&search=${props.kata}`,\n            })\n                .then((res) => {\n                    const { data } = res.data\n                    resolve(data)\n                })\n                .catch((er) => {\n                    reject(er)\n                })\n        })\n    }\n\n    return (\n        <section className=\"scrollable padder-lg w-f-md\">\n            <div className=\"dicover\">\n                <h1>Songs</h1>\n            </div>\n            <div className=\"row row-sm cards-container\">\n                {isLoad ? (\n                    Array(count)\n                        .fill()\n                        .map((_, index) => {\n                            return <Loader key={index} />\n                        })\n                ) : Songs.length <= 0 ? (\n                    <div className=\"notfound\">\n                        <h3>Songs {props.kata} not found</h3>\n                    </div>\n                ) : (\n                    Songs.map((value) => {\n                        const data = {\n                            id: value.id,\n                            uuid: value.discovery_code,\n                            name: value.music_title,\n                            code: value.music_code,\n                            artisCod: value.artis_code,\n                            singer: value.artis_name,\n                            cover: value.music_image_priority,\n                            duration: value.music_duration,\n                            musicSrc: value.music_storage_path,\n                        }\n                        return (\n                            <Cards\n                                key={data.id}\n                                idx={data.id}\n                                name={data.name}\n                                code={data.code}\n                                artiscod={data.artisCod}\n                                cover={data.cover}\n                                singer={data.singer}\n                                duration={data.duration}\n                                loved={value.love_id}\n                                songs={data}\n                            />\n                        )\n                    })\n                )}\n            </div>\n            <div className=\"dicover\">\n                <h1>Artis</h1>\n            </div>\n            <div className=\"row row-sm cards-container\">\n                {isLoad ? (\n                    Array(count)\n                        .fill()\n                        .map((_, index) => {\n                            return <Loader key={index} />\n                        })\n                ) : Artis.length <= 0 ? (\n                    <div className=\"notfound\">\n                        <h3>Artis {props.kata} not found</h3>\n                    </div>\n                ) : (\n                    Artis.map((value) => {\n                        const data = {\n                            id: value.id_artist,\n                            name: value.complete_name_artist,\n                            code: value.code_artist,\n                            image: value.foto_path_artist || avatar,\n                        }\n                        return (\n                            <CircleCard\n                                key={data.id}\n                                id={data.id}\n                                name={data.name}\n                                image={data.image}\n                                code={data.code}\n                            />\n                        )\n                    })\n                )}\n            </div>\n        </section>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        unsetAuth: bindActionCreators(logout, dispatch),\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        tokens: state.users.token,\n        isAuth: state.users.isAuth,\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Search)\n"]},"metadata":{},"sourceType":"module"}