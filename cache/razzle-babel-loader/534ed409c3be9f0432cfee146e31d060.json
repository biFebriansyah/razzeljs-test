{"ast":null,"code":"import _classCallCheck from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classPrivateFieldGet from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet\";\nimport _classPrivateFieldSet from \"/home/ab/Code/reactJs/razzel/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet\";\n\nvar _config = new WeakMap();\n\nvar _show = new WeakMap();\n\nvar _ondev = new WeakMap();\n\nvar Logs = /*#__PURE__*/function () {\n  function Logs(showLogs) {\n    var nameFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"fileName\";\n\n    _classCallCheck(this, Logs);\n\n    _config.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    _show.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    _ondev.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldSet(this, _config, nameFile);\n\n    _classPrivateFieldSet(this, _show, showLogs);\n\n    _classPrivateFieldSet(this, _ondev, false);\n  }\n\n  _createClass(Logs, [{\n    key: \"Show\",\n    value: function Show(msg) {\n      if (_classPrivateFieldGet(this, _show) && _classPrivateFieldGet(this, _ondev)) {\n        console.log(_classPrivateFieldGet(this, _config), msg);\n      }\n    }\n  }]);\n\n  return Logs;\n}();\n\nexport default Logs;","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/helpers/logs.js"],"names":["Logs","showLogs","nameFile","msg","console","log"],"mappings":";;;;;;;;;;;IAAMA,I;AAKF,gBAAYC,QAAZ,EAA6C;AAAA,QAAvBC,QAAuB,uEAAZ,UAAY;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACzC,yCAAeA,QAAf;;AACA,uCAAaD,QAAb;;AACA,wCAAc,KAAd;AACH;;;;WAED,cAAKE,GAAL,EAAU;AACN,UAAI,4DAAc,IAAd,SAAJ,EAA+B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,uBAAY,IAAZ,YAA0BF,GAA1B;AACH;AACJ;;;;;;AAGL,eAAeH,IAAf","sourcesContent":["class Logs {\n    #config\n    #show\n    #ondev\n\n    constructor(showLogs, nameFile = \"fileName\") {\n        this.#config = nameFile\n        this.#show = showLogs\n        this.#ondev = false\n    }\n\n    Show(msg) {\n        if (this.#show && this.#ondev) {\n            console.log(this.#config, msg)\n        }\n    }\n}\n\nexport default Logs\n"]},"metadata":{},"sourceType":"module"}