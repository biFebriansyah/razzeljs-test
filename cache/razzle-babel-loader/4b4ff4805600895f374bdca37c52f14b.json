{"ast":null,"code":"var _jsxFileName = \"/home/ab/Code/reactJs/razzel/src/components/AudioPlayer/index.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { formatTime } from \"helpers/utils\";\nimport ReactPlayer from \"react-jinke-music-player\";\nimport { Link } from \"react-router-dom\";\nimport { OptionsContext, TestContext } from \"helpers/contex\";\nimport logs from \"helpers/logs\";\nimport api from \"helpers/api\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { SliderConfig, SliderSet, VolumeSet, adsSlider, adsVolume } from \"helpers/sliderConfig\";\nimport { connect } from \"react-redux\";\nimport PlayerActions from \"redux/actions/player\";\nimport { bindActionCreators } from \"redux\";\nimport moment from \"moment\";\n\nfunction AudioPlayer(props) {\n  const options = {\n    mode: \"full\",\n    spaceBar: false,\n    playMode: \"order\",\n    responsive: false,\n    preload: \"none\",\n    autoPlay: false\n  };\n  const {\n    0: audio,\n    1: setAudio\n  } = useState({});\n  const duration = useRef(null);\n  const timeLine = useRef(null);\n  const logger = new logs(true, \"player\");\n  const doRequest = new api(props.tokens).req;\n  const datenow = moment().format(\"YYYY-MM-DD\");\n  const {\n    theme\n  } = useContext(OptionsContext);\n  const {\n    indexSongs,\n    playWithIndex,\n    deletList\n  } = useContext(TestContext);\n  const {\n    addToast\n  } = useToasts();\n  let bgPlayer = theme === \"bg-black\" ? \"bg-dark\" : theme === \"bg-dark\" ? \"bg-info dker\" : \"bg-success dker\";\n  const sliderSet = SliderSet(theme);\n  const volumeSet = VolumeSet(theme);\n  const {\n    0: unmount\n  } = useState(false);\n  const {\n    0: mounted,\n    1: setMounted\n  } = useState(false);\n  const {\n    0: isPause,\n    1: setIsPause\n  } = useState(true);\n  const {\n    0: listOpen,\n    1: setListOpen\n  } = useState(false);\n  const {\n    0: unmute,\n    1: setUnmute\n  } = useState(true);\n  const {\n    0: doShuffle,\n    1: setDoShuffle\n  } = useState(false);\n  const {\n    0: doRepeat,\n    1: setDoRepeat\n  } = useState(false);\n  const {\n    0: playTitle,\n    1: setPlayTitle\n  } = useState(\"\");\n  const {\n    0: playName,\n    1: setPlayName\n  } = useState(\"\");\n  const {\n    0: slideValue,\n    1: setSlideValue\n  } = useState(0);\n  const {\n    0: durasi,\n    1: setDurasi\n  } = useState(100);\n  const {\n    0: playVolume,\n    1: setPlayVolume\n  } = useState(0.2);\n  const {\n    0: prefVolume,\n    1: setPrevVolume\n  } = useState(0);\n  const {\n    0: audioLists,\n    1: setAudioLists\n  } = useState([]);\n  const {\n    0: AdsAudioLists,\n    1: setAdsAudioLists\n  } = useState([]);\n  const {\n    0: manyListen,\n    1: setManyListen\n  } = useState(null);\n  const {\n    0: autoPlay,\n    1: setAutoPlay\n  } = useState(false);\n  const {\n    0: playingAds,\n    1: setPlayAds\n  } = useState(false);\n  const {\n    0: trackConfig,\n    1: setTrackCOnfig\n  } = useState(4);\n  const {\n    0: songsCode,\n    1: setSongsCode\n  } = useState(\"\");\n  const {\n    0: listNames,\n    1: SetListName\n  } = useState(\"\");\n  const {\n    0: isList,\n    1: setIsList\n  } = useState(false);\n  const {\n    0: recentPlayIndex,\n    1: setRecentPlayIndex\n  } = useState(0);\n  const {\n    0: PlayIndex,\n    1: setPlayIndex\n  } = useState(0);\n  const {\n    0: params,\n    1: setParams\n  } = useState(_objectSpread({}, options));\n\n  const objIsEmpty = obj => {\n    return Object.keys(obj).length === 0;\n  };\n\n  useEffect(() => {\n    if (props.player.setPause) {\n      pauseMusic();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.player.setPause]);\n  useEffect(() => {\n    if (props.player.continue) {\n      playMusic();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.player.continue]); // TODO Handle Cards SideEfect while playlist playing\n\n  useEffect(() => {\n    if (playingAds) {\n      props.isPausing();\n      addToast(`Wait Until Iklan Selesai`, {\n        appearance: \"warning\"\n      });\n      return;\n    }\n\n    if (mounted && Array.isArray(props.player.data) && props.player.data.length > 0) {\n      const {\n        listName\n      } = props.player.data[0];\n      setRecentPlayIndex(0);\n      setPlayIndex(0);\n      setIsList(true);\n      SetListName(listName);\n      addToast(`Playing playlist ${listName}`, {\n        appearance: \"success\"\n      });\n      onAddListAudio(props.player.data);\n      setAutoPlay(true);\n      playMusic();\n    }\n\n    if (mounted && typeof props.player.data.name !== \"undefined\") {\n      setIsList(false);\n      SetListName(\"\");\n      onAddAudio(props.player.data);\n      setAutoPlay(true);\n      playMusic();\n      addToast(`Playing ${props.player.data.name}`, {\n        appearance: \"success\"\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.player.data]);\n  useEffect(() => {\n    props.isPausing();\n    getAdsAudio();\n    getConfigTracker();\n    getConfigAudio();\n    setMounted(!mounted); // if (!objIsEmpty(props.player.data) && typeof props.player.data.name !== \"undefined\") {\n    //     setAutoPlay(false)\n    //     onAddAudio(props.player.data)\n    //     pauseMusic()\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (!objIsEmpty(indexSongs)) {\n      if (indexSongs.listName === listNames) {\n        setPlayIndex(indexSongs.index);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [indexSongs]); // TODO playng index\n\n  useEffect(() => {\n    if (!objIsEmpty(playWithIndex)) {\n      const {\n        index,\n        songs\n      } = playWithIndex;\n      setPlayIndex(index);\n      setIsList(true);\n      onAddListAudio(songs);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [playWithIndex]);\n  useEffect(() => {\n    if (!objIsEmpty(deletList)) {\n      const {\n        index\n      } = deletList;\n      onDeletListSong(index);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [deletList]);\n\n  const getConfigAudio = () => {\n    doRequest({\n      method: \"GET\",\n      url: `config/count/audio?page=1&per_page=5`\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      setManyListen(data[0].count);\n    }).catch(er => {\n      logger.Show(er.respone);\n    });\n  };\n\n  const getConfigTracker = () => {\n    doRequest({\n      method: \"GET\",\n      url: `config/count/tracker?page=1&per_page=5`\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      setTrackCOnfig(data[0].percent);\n    }).catch(er => {\n      logger.Show(er.respone);\n    });\n  };\n\n  const getAdsAudio = () => {\n    doRequest({\n      method: \"GET\",\n      url: `banner/audio?begin_date_lte=${datenow}&end_date_gte=${datenow}`\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      const ads = [];\n      data.map(value => {\n        const music = {\n          id: value.id,\n          code: value.banner_code,\n          name: value.banner_title,\n          singer: value.banner_credit,\n          cover: null,\n          musicSrc: value.banner_image_path\n        };\n        ads.push(music);\n        return true;\n      });\n      setAdsAudioLists(ads);\n    }).catch(er => {\n      logger.Show(er.respone);\n    });\n  };\n\n  const trackMusic = code => {\n    doRequest({\n      method: \"POST\",\n      url: \"tracker/listen\",\n      data: {\n        music_code: code\n      }\n    }).catch(er => {\n      logger.Show(er.respone);\n    });\n  };\n\n  const playAds = () => {\n    const random = Math.floor(Math.random() * AdsAudioLists.length);\n    setPlayAds(true);\n    setPlayIndex(0);\n    onAddAudio(AdsAudioLists[random]);\n    setAutoPlay(true);\n    playMusic();\n  };\n\n  const onAddAudio = songs => {\n    setAudioLists([songs]);\n  };\n\n  const onAddListAudio = songs => {\n    setAudioLists(songs);\n  }; // TODO timer for music while playing\n\n\n  const musicOnProgress = audioInfo => {\n    setSlideValue(Math.ceil(audioInfo.currentTime));\n    const trackIn = Math.ceil(audioInfo.duration) * Number(trackConfig) / 100;\n\n    if (!playingAds && trackIn > 0 && Math.ceil(audioInfo.currentTime) === Math.ceil(trackIn)) {\n      logger.Show(\"Track run\");\n      trackMusic(audioInfo.code);\n      return;\n    }\n  };\n\n  const updateParams = config => {\n    const data = _objectSpread(_objectSpread({}, params), config);\n\n    setParams(data);\n  };\n\n  const openList = () => {\n    setListOpen(!listOpen);\n  };\n\n  const repeatMode = () => {\n    setDoRepeat(!doRepeat);\n    setDoShuffle(false);\n\n    if (doRepeat) {\n      updateParams({\n        playMode: \"order\"\n      });\n    } else {\n      if (audioLists.length > 1) {\n        updateParams({\n          playMode: \"orderLoop\"\n        });\n      } else {\n        updateParams({\n          playMode: \"singleLoop\"\n        });\n      }\n    }\n  };\n\n  const suffleMode = () => {\n    setDoShuffle(!doShuffle);\n    setDoRepeat(false);\n\n    if (doShuffle) {\n      updateParams({\n        playMode: \"order\"\n      });\n    } else {\n      updateParams({\n        playMode: \"shufflePlay\"\n      });\n    }\n  };\n\n  const setPlayTime = value => {\n    setSlideValue(value);\n    audio.currentTime = value;\n  };\n\n  const setVolume = value => {\n    audio.volume = value;\n    setPlayVolume(value);\n  };\n\n  const playMuted = () => {\n    setUnmute(!unmute);\n\n    if (unmute) {\n      audio.volume = 0;\n      setPrevVolume(playVolume);\n      setPlayVolume(0);\n    } else {\n      audio.volume = prefVolume;\n      setPlayVolume(prefVolume); // audio.volume = 0.2\n      // setPlayVolume(0.2)\n    }\n  };\n\n  const playMusic = () => {\n    if (typeof audio.play === \"function\") {\n      const playPromise = audio.play();\n\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          return true;\n        }).catch(er => {\n          logger.Show(er);\n        });\n      }\n    }\n  };\n\n  const onDeletListSong = index => {\n    if (isList) {\n      const newList = [...audioLists].filter((val, idx) => {\n        return index !== idx;\n      });\n      onAddListAudio(newList);\n    }\n  };\n\n  const musicEnd = () => {\n    setIsPause(true);\n\n    if (playingAds) {\n      props.setAdsCount(0);\n      setPlayAds(false);\n\n      if (isList) {\n        // updateParams({\n        //     playIndex: recentPlayIndex,\n        // })\n        setPlayIndex(recentPlayIndex);\n        onAddListAudio(props.player.data);\n        setAutoPlay(true);\n      } else {\n        onAddAudio(props.player.data);\n        setAutoPlay(true);\n      }\n    } else {\n      if (isList) {\n        if (recentPlayIndex !== audioLists.length - 1) {\n          setPlayIndex(recentPlayIndex + 1);\n        }\n      }\n    }\n  };\n\n  const pauseMusic = () => {\n    setIsPause(true);\n\n    if (typeof audio.pause === \"function\") {\n      audio.pause();\n    }\n  };\n\n  const playNext = () => {\n    if (isList) {\n      if (recentPlayIndex !== audioLists.length - 1) {\n        setPlayIndex(recentPlayIndex + 1);\n      } else {\n        setPlayIndex(0);\n      }\n    }\n  };\n\n  const playPrev = () => {\n    if (isList) {\n      if (recentPlayIndex !== 0) {\n        setPlayIndex(recentPlayIndex - 1);\n      } else {\n        setPlayIndex(0);\n      }\n    }\n  };\n\n  const onPausePlayer = () => {\n    props.isPausing();\n  };\n\n  const prepareMusic = audioInfo => {\n    setSongsCode(audioInfo.code);\n\n    if (!playingAds && isList) {\n      setRecentPlayIndex(audioInfo.playIndex);\n    }\n\n    if (!props.isPremium) {\n      if (songsCode !== audioInfo.code && props.adsState >= Number(manyListen)) {\n        playAds();\n      } else if (songsCode !== audioInfo.code) {\n        props.setAdsCount(props.adsState + 1);\n      }\n    }\n\n    props.isPlaying();\n    props.setPlaying();\n    const title = `${audioInfo.name} - ${audioInfo.singer}`;\n    props.Playing({\n      title: audioInfo.name,\n      singer: audioInfo.singer,\n      cover: audioInfo.cover,\n      code: audioInfo.code,\n      isList: isList,\n      listName: audioInfo.listName\n    });\n    logger.Show(\"Prepare innject\");\n    setPlayName(audioInfo.name);\n    setPlayTitle(title);\n    setIsPause(false);\n    setDurasi(Math.ceil(audioInfo.duration));\n  };\n\n  const renderUi = () => {\n    return __jsx(\"footer\", {\n      className: `footer footer ${bgPlayer}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      id: \"jp_container_N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-type-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      id: \"jplayer_N\",\n      className: \"jp-jplayer hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      className: \"jp-gui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-video-play hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 29\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-video-play-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 33\n      }\n    }, \"play\")), __jsx(\"div\", {\n      className: \"jp-interface\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-previous\",\n      onClick: playPrev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-rewind i-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-play ${isPause ? \"\" : \"hid\"}`,\n      onClick: playMusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-play i-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: `jp-pause ${isPause ? \"hid\" : \"\"}`,\n      onClick: pauseMusic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-pause i-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-next\",\n      onClick: playNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-forward i-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      onClick: openList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"jp-progress hidden-xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-seek-bar dk\",\n      ref: timeLine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 41\n      }\n    }, __jsx(Slider, _extends({}, SliderConfig, {\n      max: durasi,\n      value: slideValue,\n      onChange: setPlayTime,\n      railStyle: sliderSet.railStyle,\n      trackStyle: sliderSet.trackStyle,\n      handleStyle: sliderSet.dotStyle,\n      style: {\n        padding: 0,\n        height: \"60px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 45\n      }\n    })), __jsx(\"p\", {\n      className: \"player-title text-lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 45\n      }\n    }, playTitle ? playTitle : \"Fly Music\"))), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-current-time text-xs text-muted\",\n      ref: duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 37\n      }\n    }, audio.currentTime ? formatTime(audio.currentTime) : \"00:00\"), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-duration text-xs text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 37\n      }\n    }, audio.duration ? formatTime(audio.duration) : \"00:00\"), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-mute ${unmute ? \"\" : \"hid\"}`,\n      title: \"mute\",\n      onClick: playMuted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-volume-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: `jp-unmute ${unmute ? \"hid\" : \"\"}`,\n      title: \"unmute\",\n      onClick: playMuted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-volume-off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-volume-bar dk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-volume-bar-value lter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 45\n      }\n    }, __jsx(Slider, _extends({}, SliderConfig, {\n      max: 1,\n      value: playVolume,\n      onChange: setVolume,\n      railStyle: volumeSet.railStyle,\n      trackStyle: volumeSet.trackStyle,\n      handleStyle: volumeSet.dotStyle,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 49\n      }\n    }))))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-shuffle ${doShuffle ? \"hid\" : \"\"}`,\n      title: \"shuffle\",\n      onClick: suffleMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-shuffle text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: `jp-shuffle-off ${doShuffle ? \"\" : \"hid\"}`,\n      title: \"shuffle off\",\n      onClick: suffleMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-shuffle text-lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-repeat ${doRepeat ? \"hid\" : \"\"}`,\n      title: \"repeat\",\n      onClick: repeatMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-loop text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: `jp-repeat-off ${doRepeat ? \"\" : \"hid\"}`,\n      title: \"repeat off\",\n      onClick: repeatMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-loop text-lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-full-screen\",\n      title: \"full screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: \"jp-restore-screen\",\n      title: \"restore screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-compress text-lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 45\n      }\n    })))))), __jsx(\"div\", {\n      className: `jp-playlist dropup ${listOpen ? \"open\" : \"\"}`,\n      id: \"playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 25\n      }\n    }, __jsx(\"ul\", {\n      className: \"dropdown-menu aside-xl dker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    }, audioLists.length > 0 ? audioLists.map((value, index) => {\n      return __jsx(\"li\", {\n        key: index,\n        className: `${value.name === playName ? \"jp-playlist-current\" : \"non\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 45\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 49\n        }\n      }, __jsx(Link, {\n        to: \"#\",\n        onClick: () => onDeletListSong(index),\n        className: \"jp-playlist-item-remove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 53\n        }\n      }, \"\\xD7\"), __jsx(Link, {\n        to: \"#\",\n        onClick: () => setPlayIndex(index),\n        className: `jp-playlist-item ${value.name === playName ? \"jp-playlist-current\" : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 53\n        }\n      }, value.name)));\n    }) : __jsx(\"li\", {\n      className: \"non\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 41\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-playlist-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 45\n      }\n    }, \"Playlist not found\"))))))));\n  };\n\n  const renderUiAds = () => {\n    return __jsx(\"footer\", {\n      className: `footer footer bg-primary dker`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      id: \"jp_container_N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-type-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-gui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-video-play hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 29\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-video-play-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 33\n      }\n    }, \"play\")), __jsx(\"div\", {\n      className: \"jp-interface\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-previous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-rewind i-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-play `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-play i-2x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-next disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-control-forward i-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"hide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: \"jp-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"jp-progress hidden-xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-seek-bar dk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 41\n      }\n    }, __jsx(Slider, _extends({}, SliderConfig, {\n      max: durasi,\n      value: slideValue,\n      railStyle: adsSlider.railStyle,\n      trackStyle: adsSlider.trackStyle,\n      handleStyle: adsSlider.dotStyle,\n      style: {\n        padding: 0,\n        height: \"60px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 45\n      }\n    })), __jsx(\"p\", {\n      className: \"player-title text-lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 45\n      }\n    }, playTitle ? playTitle : \"Fly Music\"))), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-current-time text-xs text-muted\",\n      ref: duration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 37\n      }\n    }, audio.currentTime ? formatTime(audio.currentTime) : \"00:00\"), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-duration text-xs text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 37\n      }\n    }, audio.duration ? formatTime(audio.duration) : \"00:00\"), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-mute ${unmute ? \"\" : \"hid\"}`,\n      title: \"mute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-volume-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      to: \"#\",\n      className: `jp-unmute ${unmute ? \"hid\" : \"\"}`,\n      title: \"unmute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-volume-off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      className: \"hidden-xs hidden-sm jp-volume\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-volume-bar dk\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: \"jp-volume-bar-value lter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 45\n      }\n    }, __jsx(Slider, _extends({}, SliderConfig, {\n      max: 1,\n      railStyle: adsVolume.railStyle,\n      trackStyle: adsVolume.trackStyle,\n      handleStyle: adsVolume.dotStyle,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 49\n      }\n    }))))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-shuffle`,\n      title: \"shuffle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-shuffle text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 45\n      }\n    }))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 37\n      }\n    }, __jsx(Link, {\n      to: \"#\",\n      className: `jp-repeat `,\n      title: \"repeat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 41\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-loop text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 45\n      }\n    })))))))));\n  };\n\n  return __jsx(React.Fragment, null, playingAds ? renderUiAds() : renderUi(), unmount ? null : __jsx(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 17\n    }\n  }, __jsx(ReactPlayer, _extends({}, params, {\n    showMediaSession: true,\n    getAudioInstance: instance => {\n      setAudio(instance);\n    },\n    clearPriorAudioLists: true,\n    quietUpdate: true,\n    audioLists: audioLists,\n    playIndex: PlayIndex,\n    defaultVolume: playVolume,\n    autoPlay: autoPlay,\n    style: {\n      display: \"none\"\n    },\n    onAudioProgress: musicOnProgress,\n    onAudioPlay: prepareMusic,\n    onAudioEnded: musicEnd,\n    onAudioPause: onPausePlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 21\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    player: state.player,\n    adsState: state.player.adsPlay,\n    tokens: state.users.token,\n    users: state.users,\n    isAuth: state.users.isAuth,\n    isPremium: state.users.premium\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveState: bindActionCreators(PlayerActions.setSaveState, dispatch),\n    isPlaying: bindActionCreators(PlayerActions.isPlay, dispatch),\n    setPausing: bindActionCreators(PlayerActions.setPause, dispatch),\n    isPausing: bindActionCreators(PlayerActions.isPause, dispatch),\n    setPlaying: bindActionCreators(PlayerActions.setPlay, dispatch),\n    Playing: bindActionCreators(PlayerActions.setPlaying, dispatch),\n    setAdsCount: bindActionCreators(PlayerActions.setAdsCount, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/components/AudioPlayer/index.jsx"],"names":["React","useState","useContext","useRef","useEffect","formatTime","ReactPlayer","Link","OptionsContext","TestContext","logs","api","useToasts","Slider","SliderConfig","SliderSet","VolumeSet","adsSlider","adsVolume","connect","PlayerActions","bindActionCreators","moment","AudioPlayer","props","options","mode","spaceBar","playMode","responsive","preload","autoPlay","audio","setAudio","duration","timeLine","logger","doRequest","tokens","req","datenow","format","theme","indexSongs","playWithIndex","deletList","addToast","bgPlayer","sliderSet","volumeSet","unmount","mounted","setMounted","isPause","setIsPause","listOpen","setListOpen","unmute","setUnmute","doShuffle","setDoShuffle","doRepeat","setDoRepeat","playTitle","setPlayTitle","playName","setPlayName","slideValue","setSlideValue","durasi","setDurasi","playVolume","setPlayVolume","prefVolume","setPrevVolume","audioLists","setAudioLists","AdsAudioLists","setAdsAudioLists","manyListen","setManyListen","setAutoPlay","playingAds","setPlayAds","trackConfig","setTrackCOnfig","songsCode","setSongsCode","listNames","SetListName","isList","setIsList","recentPlayIndex","setRecentPlayIndex","PlayIndex","setPlayIndex","params","setParams","objIsEmpty","obj","Object","keys","length","player","setPause","pauseMusic","continue","playMusic","isPausing","appearance","Array","isArray","data","listName","onAddListAudio","name","onAddAudio","getAdsAudio","getConfigTracker","getConfigAudio","index","songs","onDeletListSong","method","url","then","res","count","catch","er","Show","respone","percent","ads","map","value","music","id","code","banner_code","banner_title","singer","banner_credit","cover","musicSrc","banner_image_path","push","trackMusic","music_code","playAds","random","Math","floor","musicOnProgress","audioInfo","ceil","currentTime","trackIn","Number","updateParams","config","openList","repeatMode","suffleMode","setPlayTime","setVolume","volume","playMuted","play","playPromise","undefined","newList","filter","val","idx","musicEnd","setAdsCount","pause","playNext","playPrev","onPausePlayer","prepareMusic","playIndex","isPremium","adsState","isPlaying","setPlaying","title","Playing","renderUi","railStyle","trackStyle","dotStyle","padding","height","renderUiAds","instance","display","mapStateToProps","state","adsPlay","users","token","isAuth","premium","mapDispatchToProps","dispatch","saveState","setSaveState","isPlay","setPausing","setPlay"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\"\nimport { formatTime } from \"helpers/utils\"\nimport ReactPlayer from \"react-jinke-music-player\"\nimport { Link } from \"react-router-dom\"\nimport { OptionsContext, TestContext } from \"helpers/contex\"\nimport logs from \"helpers/logs\"\nimport api from \"helpers/api\"\nimport { useToasts } from \"react-toast-notifications\"\nimport Slider from \"rc-slider\"\nimport \"rc-slider/assets/index.css\"\nimport { SliderConfig, SliderSet, VolumeSet, adsSlider, adsVolume } from \"helpers/sliderConfig\"\nimport { connect } from \"react-redux\"\nimport PlayerActions from \"redux/actions/player\"\nimport { bindActionCreators } from \"redux\"\nimport moment from \"moment\"\n\nfunction AudioPlayer(props) {\n    const options = {\n        mode: \"full\",\n        spaceBar: false,\n        playMode: \"order\",\n        responsive: false,\n        preload: \"none\",\n        autoPlay: false,\n    }\n\n    const [audio, setAudio] = useState({})\n    const duration = useRef(null)\n    const timeLine = useRef(null)\n    const logger = new logs(true, \"player\")\n    const doRequest = new api(props.tokens).req\n    const datenow = moment().format(\"YYYY-MM-DD\")\n    const { theme } = useContext(OptionsContext)\n    const { indexSongs, playWithIndex, deletList } = useContext(TestContext)\n    const { addToast } = useToasts()\n    let bgPlayer =\n        theme === \"bg-black\" ? \"bg-dark\" : theme === \"bg-dark\" ? \"bg-info dker\" : \"bg-success dker\"\n    const sliderSet = SliderSet(theme)\n    const volumeSet = VolumeSet(theme)\n\n    const [unmount] = useState(false)\n    const [mounted, setMounted] = useState(false)\n    const [isPause, setIsPause] = useState(true)\n    const [listOpen, setListOpen] = useState(false)\n    const [unmute, setUnmute] = useState(true)\n    const [doShuffle, setDoShuffle] = useState(false)\n    const [doRepeat, setDoRepeat] = useState(false)\n    const [playTitle, setPlayTitle] = useState(\"\")\n    const [playName, setPlayName] = useState(\"\")\n    const [slideValue, setSlideValue] = useState(0)\n    const [durasi, setDurasi] = useState(100)\n    const [playVolume, setPlayVolume] = useState(0.2)\n    const [prefVolume, setPrevVolume] = useState(0)\n    const [audioLists, setAudioLists] = useState([])\n    const [AdsAudioLists, setAdsAudioLists] = useState([])\n    const [manyListen, setManyListen] = useState(null)\n    const [autoPlay, setAutoPlay] = useState(false)\n    const [playingAds, setPlayAds] = useState(false)\n    const [trackConfig, setTrackCOnfig] = useState(4)\n    const [songsCode, setSongsCode] = useState(\"\")\n    const [listNames, SetListName] = useState(\"\")\n    const [isList, setIsList] = useState(false)\n    const [recentPlayIndex, setRecentPlayIndex] = useState(0)\n    const [PlayIndex, setPlayIndex] = useState(0)\n    const [params, setParams] = useState({\n        ...options,\n    })\n\n    const objIsEmpty = (obj) => {\n        return Object.keys(obj).length === 0\n    }\n\n    useEffect(() => {\n        if (props.player.setPause) {\n            pauseMusic()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.player.setPause])\n\n    useEffect(() => {\n        if (props.player.continue) {\n            playMusic()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.player.continue])\n\n    // TODO Handle Cards SideEfect while playlist playing\n    useEffect(() => {\n        if (playingAds) {\n            props.isPausing()\n            addToast(`Wait Until Iklan Selesai`, { appearance: \"warning\" })\n            return\n        }\n        if (mounted && Array.isArray(props.player.data) && props.player.data.length > 0) {\n            const { listName } = props.player.data[0]\n            setRecentPlayIndex(0)\n            setPlayIndex(0)\n            setIsList(true)\n            SetListName(listName)\n            addToast(`Playing playlist ${listName}`, { appearance: \"success\" })\n            onAddListAudio(props.player.data)\n            setAutoPlay(true)\n            playMusic()\n        }\n        if (mounted && typeof props.player.data.name !== \"undefined\") {\n            setIsList(false)\n            SetListName(\"\")\n            onAddAudio(props.player.data)\n            setAutoPlay(true)\n            playMusic()\n            addToast(`Playing ${props.player.data.name}`, { appearance: \"success\" })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.player.data])\n\n    useEffect(() => {\n        props.isPausing()\n        getAdsAudio()\n        getConfigTracker()\n        getConfigAudio()\n        setMounted(!mounted)\n        // if (!objIsEmpty(props.player.data) && typeof props.player.data.name !== \"undefined\") {\n        //     setAutoPlay(false)\n        //     onAddAudio(props.player.data)\n        //     pauseMusic()\n        // }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (!objIsEmpty(indexSongs)) {\n            if (indexSongs.listName === listNames) {\n                setPlayIndex(indexSongs.index)\n            }\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [indexSongs])\n\n    // TODO playng index\n    useEffect(() => {\n        if (!objIsEmpty(playWithIndex)) {\n            const { index, songs } = playWithIndex\n            setPlayIndex(index)\n            setIsList(true)\n            onAddListAudio(songs)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [playWithIndex])\n\n    useEffect(() => {\n        if (!objIsEmpty(deletList)) {\n            const { index } = deletList\n            onDeletListSong(index)\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [deletList])\n\n    const getConfigAudio = () => {\n        doRequest({\n            method: \"GET\",\n            url: `config/count/audio?page=1&per_page=5`,\n        })\n            .then((res) => {\n                const { data } = res.data\n                setManyListen(data[0].count)\n            })\n            .catch((er) => {\n                logger.Show(er.respone)\n            })\n    }\n\n    const getConfigTracker = () => {\n        doRequest({\n            method: \"GET\",\n            url: `config/count/tracker?page=1&per_page=5`,\n        })\n            .then((res) => {\n                const { data } = res.data\n                setTrackCOnfig(data[0].percent)\n            })\n            .catch((er) => {\n                logger.Show(er.respone)\n            })\n    }\n\n    const getAdsAudio = () => {\n        doRequest({\n            method: \"GET\",\n            url: `banner/audio?begin_date_lte=${datenow}&end_date_gte=${datenow}`,\n        })\n            .then((res) => {\n                const { data } = res.data\n                const ads = []\n                data.map((value) => {\n                    const music = {\n                        id: value.id,\n                        code: value.banner_code,\n                        name: value.banner_title,\n                        singer: value.banner_credit,\n                        cover: null,\n                        musicSrc: value.banner_image_path,\n                    }\n                    ads.push(music)\n                    return true\n                })\n                setAdsAudioLists(ads)\n            })\n            .catch((er) => {\n                logger.Show(er.respone)\n            })\n    }\n\n    const trackMusic = (code) => {\n        doRequest({\n            method: \"POST\",\n            url: \"tracker/listen\",\n            data: {\n                music_code: code,\n            },\n        }).catch((er) => {\n            logger.Show(er.respone)\n        })\n    }\n\n    const playAds = () => {\n        const random = Math.floor(Math.random() * AdsAudioLists.length)\n        setPlayAds(true)\n        setPlayIndex(0)\n        onAddAudio(AdsAudioLists[random])\n        setAutoPlay(true)\n        playMusic()\n    }\n\n    const onAddAudio = (songs) => {\n        setAudioLists([songs])\n    }\n\n    const onAddListAudio = (songs) => {\n        setAudioLists(songs)\n    }\n\n    // TODO timer for music while playing\n    const musicOnProgress = (audioInfo) => {\n        setSlideValue(Math.ceil(audioInfo.currentTime))\n        const trackIn = (Math.ceil(audioInfo.duration) * Number(trackConfig)) / 100\n        if (!playingAds && trackIn > 0 && Math.ceil(audioInfo.currentTime) === Math.ceil(trackIn)) {\n            logger.Show(\"Track run\")\n            trackMusic(audioInfo.code)\n            return\n        }\n    }\n\n    const updateParams = (config) => {\n        const data = {\n            ...params,\n            ...config,\n        }\n        setParams(data)\n    }\n\n    const openList = () => {\n        setListOpen(!listOpen)\n    }\n\n    const repeatMode = () => {\n        setDoRepeat(!doRepeat)\n        setDoShuffle(false)\n        if (doRepeat) {\n            updateParams({ playMode: \"order\" })\n        } else {\n            if (audioLists.length > 1) {\n                updateParams({ playMode: \"orderLoop\" })\n            } else {\n                updateParams({ playMode: \"singleLoop\" })\n            }\n        }\n    }\n\n    const suffleMode = () => {\n        setDoShuffle(!doShuffle)\n        setDoRepeat(false)\n        if (doShuffle) {\n            updateParams({ playMode: \"order\" })\n        } else {\n            updateParams({ playMode: \"shufflePlay\" })\n        }\n    }\n\n    const setPlayTime = (value) => {\n        setSlideValue(value)\n        audio.currentTime = value\n    }\n\n    const setVolume = (value) => {\n        audio.volume = value\n        setPlayVolume(value)\n    }\n\n    const playMuted = () => {\n        setUnmute(!unmute)\n        if (unmute) {\n            audio.volume = 0\n            setPrevVolume(playVolume)\n            setPlayVolume(0)\n        } else {\n            audio.volume = prefVolume\n            setPlayVolume(prefVolume)\n            // audio.volume = 0.2\n            // setPlayVolume(0.2)\n        }\n    }\n\n    const playMusic = () => {\n        if (typeof audio.play === \"function\") {\n            const playPromise = audio.play()\n            if (playPromise !== undefined) {\n                playPromise\n                    .then(() => {\n                        return true\n                    })\n                    .catch((er) => {\n                        logger.Show(er)\n                    })\n            }\n        }\n    }\n\n    const onDeletListSong = (index) => {\n        if (isList) {\n            const newList = [...audioLists].filter((val, idx) => {\n                return index !== idx\n            })\n            onAddListAudio(newList)\n        }\n    }\n\n    const musicEnd = () => {\n        setIsPause(true)\n        if (playingAds) {\n            props.setAdsCount(0)\n            setPlayAds(false)\n            if (isList) {\n                // updateParams({\n                //     playIndex: recentPlayIndex,\n                // })\n                setPlayIndex(recentPlayIndex)\n                onAddListAudio(props.player.data)\n                setAutoPlay(true)\n            } else {\n                onAddAudio(props.player.data)\n                setAutoPlay(true)\n            }\n        } else {\n            if (isList) {\n                if (recentPlayIndex !== audioLists.length - 1) {\n                    setPlayIndex(recentPlayIndex + 1)\n                }\n            }\n        }\n    }\n\n    const pauseMusic = () => {\n        setIsPause(true)\n        if (typeof audio.pause === \"function\") {\n            audio.pause()\n        }\n    }\n    const playNext = () => {\n        if (isList) {\n            if (recentPlayIndex !== audioLists.length - 1) {\n                setPlayIndex(recentPlayIndex + 1)\n            } else {\n                setPlayIndex(0)\n            }\n        }\n    }\n    const playPrev = () => {\n        if (isList) {\n            if (recentPlayIndex !== 0) {\n                setPlayIndex(recentPlayIndex - 1)\n            } else {\n                setPlayIndex(0)\n            }\n        }\n    }\n\n    const onPausePlayer = () => {\n        props.isPausing()\n    }\n\n    const prepareMusic = (audioInfo) => {\n        setSongsCode(audioInfo.code)\n        if (!playingAds && isList) {\n            setRecentPlayIndex(audioInfo.playIndex)\n        }\n        if (!props.isPremium) {\n            if (songsCode !== audioInfo.code && props.adsState >= Number(manyListen)) {\n                playAds()\n            } else if (songsCode !== audioInfo.code) {\n                props.setAdsCount(props.adsState + 1)\n            }\n        }\n        props.isPlaying()\n        props.setPlaying()\n        const title = `${audioInfo.name} - ${audioInfo.singer}`\n        props.Playing({\n            title: audioInfo.name,\n            singer: audioInfo.singer,\n            cover: audioInfo.cover,\n            code: audioInfo.code,\n            isList: isList,\n            listName: audioInfo.listName,\n        })\n        logger.Show(\"Prepare innject\")\n        setPlayName(audioInfo.name)\n        setPlayTitle(title)\n        setIsPause(false)\n        setDurasi(Math.ceil(audioInfo.duration))\n    }\n\n    const renderUi = () => {\n        return (\n            <footer className={`footer footer ${bgPlayer}`}>\n                <div id=\"jp_container_N\">\n                    <div className=\"jp-type-playlist\">\n                        <div id=\"jplayer_N\" className=\"jp-jplayer hide\" />\n                        <div className=\"jp-gui\">\n                            <div className=\"jp-video-play hide\">\n                                <Link to=\"#\" className=\"jp-video-play-icon\">\n                                    play\n                                </Link>\n                            </div>\n                            <div className=\"jp-interface\">\n                                <div className=\"jp-controls\">\n                                    <div>\n                                        <Link to=\"#\" className=\"jp-previous\" onClick={playPrev}>\n                                            <i className=\"icon-control-rewind i-lg\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-play ${isPause ? \"\" : \"hid\"}`}\n                                            onClick={playMusic}\n                                        >\n                                            <i className=\"icon-control-play i-2x\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-pause ${isPause ? \"hid\" : \"\"}`}\n                                            onClick={pauseMusic}\n                                        >\n                                            <i className=\"icon-control-pause i-2x\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" className=\"jp-next\" onClick={playNext}>\n                                            <i className=\"icon-control-forward i-lg\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"hide\">\n                                        <Link to=\"#\" className=\"jp-stop\">\n                                            <i className=\"fa fa-stop\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" onClick={openList}>\n                                            <i className=\"icon-list\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"jp-progress hidden-xs\">\n                                        <div className=\"jp-seek-bar dk\" ref={timeLine}>\n                                            <Slider\n                                                {...SliderConfig}\n                                                max={durasi}\n                                                value={slideValue}\n                                                onChange={setPlayTime}\n                                                railStyle={sliderSet.railStyle}\n                                                trackStyle={sliderSet.trackStyle}\n                                                handleStyle={sliderSet.dotStyle}\n                                                style={{ padding: 0, height: \"60px\" }}\n                                            />\n                                            <p className=\"player-title text-lt\">\n                                                {playTitle ? playTitle : \"Fly Music\"}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div\n                                        className=\"hidden-xs hidden-sm jp-current-time text-xs text-muted\"\n                                        ref={duration}\n                                    >\n                                        {audio.currentTime\n                                            ? formatTime(audio.currentTime)\n                                            : \"00:00\"}\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm jp-duration text-xs text-muted\">\n                                        {/* {playDuration ? playDuration : \"00:00\"} */}\n                                        {audio.duration ? formatTime(audio.duration) : \"00:00\"}\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm\">\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-mute ${unmute ? \"\" : \"hid\"}`}\n                                            title=\"mute\"\n                                            onClick={playMuted}\n                                        >\n                                            <i className=\"icon-volume-2\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-unmute ${unmute ? \"hid\" : \"\"}`}\n                                            title=\"unmute\"\n                                            onClick={playMuted}\n                                        >\n                                            <i className=\"icon-volume-off\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm jp-volume\">\n                                        <div className=\"jp-volume-bar dk\">\n                                            <div className=\"jp-volume-bar-value lter\">\n                                                <Slider\n                                                    {...SliderConfig}\n                                                    max={1}\n                                                    value={playVolume}\n                                                    onChange={setVolume}\n                                                    railStyle={volumeSet.railStyle}\n                                                    trackStyle={volumeSet.trackStyle}\n                                                    handleStyle={volumeSet.dotStyle}\n                                                    style={{ padding: 0 }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-shuffle ${doShuffle ? \"hid\" : \"\"}`}\n                                            title=\"shuffle\"\n                                            onClick={suffleMode}\n                                        >\n                                            <i className=\"icon-shuffle text-muted\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-shuffle-off ${doShuffle ? \"\" : \"hid\"}`}\n                                            title=\"shuffle off\"\n                                            onClick={suffleMode}\n                                        >\n                                            <i className=\"icon-shuffle text-lt\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-repeat ${doRepeat ? \"hid\" : \"\"}`}\n                                            title=\"repeat\"\n                                            onClick={repeatMode}\n                                        >\n                                            <i className=\"icon-loop text-muted\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-repeat-off ${doRepeat ? \"\" : \"hid\"}`}\n                                            title=\"repeat off\"\n                                            onClick={repeatMode}\n                                        >\n                                            <i className=\"icon-loop text-lt\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"hide\">\n                                        <Link to=\"#\" className=\"jp-full-screen\" title=\"full screen\">\n                                            <i className=\"fa fa-expand\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className=\"jp-restore-screen\"\n                                            title=\"restore screen\"\n                                        >\n                                            <i className=\"fa fa-compress text-lt\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            className={`jp-playlist dropup ${listOpen ? \"open\" : \"\"}`}\n                            id=\"playlist\"\n                        >\n                            <ul className=\"dropdown-menu aside-xl dker\">\n                                {audioLists.length > 0 ? (\n                                    audioLists.map((value, index) => {\n                                        return (\n                                            <li\n                                                key={index}\n                                                className={`${\n                                                    value.name === playName\n                                                        ? \"jp-playlist-current\"\n                                                        : \"non\"\n                                                }`}\n                                            >\n                                                <div>\n                                                    <Link\n                                                        to=\"#\"\n                                                        onClick={() => onDeletListSong(index)}\n                                                        className=\"jp-playlist-item-remove\"\n                                                    >\n                                                        ×\n                                                    </Link>\n                                                    <Link\n                                                        to=\"#\"\n                                                        onClick={() => setPlayIndex(index)}\n                                                        className={`jp-playlist-item ${\n                                                            value.name === playName\n                                                                ? \"jp-playlist-current\"\n                                                                : \"\"\n                                                        }`}\n                                                    >\n                                                        {value.name}\n                                                    </Link>\n                                                </div>\n                                            </li>\n                                        )\n                                    })\n                                ) : (\n                                    <li className=\"non\">\n                                        <div>\n                                            <Link to=\"#\" className=\"jp-playlist-item\">\n                                                Playlist not found\n                                            </Link>\n                                        </div>\n                                    </li>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n\n    const renderUiAds = () => {\n        return (\n            <footer className={`footer footer bg-primary dker`}>\n                <div id=\"jp_container_N\">\n                    <div className=\"jp-type-playlist\">\n                        <div className=\"jp-gui\">\n                            <div className=\"jp-video-play hide\">\n                                <Link to=\"#\" className=\"jp-video-play-icon\">\n                                    play\n                                </Link>\n                            </div>\n                            <div className=\"jp-interface\">\n                                <div className=\"jp-controls\">\n                                    <div>\n                                        <Link to=\"#\" className=\"jp-previous\">\n                                            <i className=\"icon-control-rewind i-lg\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" className={`jp-play `}>\n                                            <i className=\"icon-control-play i-2x\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" className=\"jp-next disabled\">\n                                            <i className=\"icon-control-forward i-lg\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"hide\">\n                                        <Link to=\"#\" className=\"jp-stop\">\n                                            <i className=\"fa fa-stop\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\">\n                                            <i className=\"icon-list\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"jp-progress hidden-xs\">\n                                        <div className=\"jp-seek-bar dk\">\n                                            <Slider\n                                                {...SliderConfig}\n                                                max={durasi}\n                                                value={slideValue}\n                                                railStyle={adsSlider.railStyle}\n                                                trackStyle={adsSlider.trackStyle}\n                                                handleStyle={adsSlider.dotStyle}\n                                                style={{ padding: 0, height: \"60px\" }}\n                                            />\n                                            <p className=\"player-title text-lt\">\n                                                {playTitle ? playTitle : \"Fly Music\"}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div\n                                        className=\"hidden-xs hidden-sm jp-current-time text-xs text-muted\"\n                                        ref={duration}\n                                    >\n                                        {audio.currentTime\n                                            ? formatTime(audio.currentTime)\n                                            : \"00:00\"}\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm jp-duration text-xs text-muted\">\n                                        {/* {playDuration ? playDuration : \"00:00\"} */}\n                                        {audio.duration ? formatTime(audio.duration) : \"00:00\"}\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm\">\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-mute ${unmute ? \"\" : \"hid\"}`}\n                                            title=\"mute\"\n                                        >\n                                            <i className=\"icon-volume-2\" />\n                                        </Link>\n                                        <Link\n                                            to=\"#\"\n                                            className={`jp-unmute ${unmute ? \"hid\" : \"\"}`}\n                                            title=\"unmute\"\n                                        >\n                                            <i className=\"icon-volume-off\" />\n                                        </Link>\n                                    </div>\n                                    <div className=\"hidden-xs hidden-sm jp-volume\">\n                                        <div className=\"jp-volume-bar dk\">\n                                            <div className=\"jp-volume-bar-value lter\">\n                                                <Slider\n                                                    {...SliderConfig}\n                                                    max={1}\n                                                    railStyle={adsVolume.railStyle}\n                                                    trackStyle={adsVolume.trackStyle}\n                                                    handleStyle={adsVolume.dotStyle}\n                                                    style={{ padding: 0 }}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" className={`jp-shuffle`} title=\"shuffle\">\n                                            <i className=\"icon-shuffle text-muted\" />\n                                        </Link>\n                                    </div>\n                                    <div>\n                                        <Link to=\"#\" className={`jp-repeat `} title=\"repeat\">\n                                            <i className=\"icon-loop text-muted\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        )\n    }\n\n    return (\n        <>\n            {playingAds ? renderUiAds() : renderUi()}\n            {unmount ? null : (\n                <div className=\"test\">\n                    <ReactPlayer\n                        {...params}\n                        showMediaSession\n                        getAudioInstance={(instance) => {\n                            setAudio(instance)\n                        }}\n                        clearPriorAudioLists={true}\n                        quietUpdate={true}\n                        audioLists={audioLists}\n                        playIndex={PlayIndex}\n                        defaultVolume={playVolume}\n                        autoPlay={autoPlay}\n                        style={{ display: \"none\" }}\n                        onAudioProgress={musicOnProgress}\n                        onAudioPlay={prepareMusic}\n                        onAudioEnded={musicEnd}\n                        onAudioPause={onPausePlayer}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player,\n        adsState: state.player.adsPlay,\n        tokens: state.users.token,\n        users: state.users,\n        isAuth: state.users.isAuth,\n        isPremium: state.users.premium,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        saveState: bindActionCreators(PlayerActions.setSaveState, dispatch),\n        isPlaying: bindActionCreators(PlayerActions.isPlay, dispatch),\n        setPausing: bindActionCreators(PlayerActions.setPause, dispatch),\n        isPausing: bindActionCreators(PlayerActions.isPause, dispatch),\n        setPlaying: bindActionCreators(PlayerActions.setPlay, dispatch),\n        Playing: bindActionCreators(PlayerActions.setPlaying, dispatch),\n        setAdsCount: bindActionCreators(PlayerActions.setAdsCount, dispatch),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AudioPlayer)\n"]},"metadata":{},"sourceType":"module"}