{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\"; // import { Ads } from \"helpers/dumy\"\n\nimport { connect } from \"react-redux\";\nimport api from \"helpers/api\";\nimport logs from \"helpers/logs\";\nimport moment from \"moment\";\nimport \"./css/style.scoped.scss\";\n\nfunction Coursel(props) {\n  const myapi = new api(props.tokens);\n  const logger = new logs(false, \"Coursel\");\n  const datenow = moment().format(\"YYYY-MM-DD\");\n  const {\n    0: slideValue,\n    1: setSlideValue\n  } = useState([]);\n  useEffect(() => {\n    myapi.req({\n      method: \"GET\",\n      url: `/banner/slide?begin_date_lte=${datenow}&end_date_gte=${datenow}`\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      setSlideValue(data);\n      logger.Show(data);\n    }).catch(er => {\n      console.log(er.respone);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const conf = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    arrows: false,\n    className: \"center\",\n    centerPadding: \"60px\",\n    swipeToSlide: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n  return __jsx(\"section\", {\n    className: \"slid-panel\"\n  }, __jsx(Slider, conf, slideValue.map(items => {\n    return __jsx(\"div\", {\n      className: \"slideItems\",\n      key: items.banner_code\n    }, __jsx(\"img\", {\n      src: items.banner_image_path,\n      alt: items.banner_title\n    }));\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    tokens: state.users.token,\n    isAuth: state.users.isAuth\n  };\n};\n\nexport default connect(mapStateToProps)(Coursel);","map":{"version":3,"sources":["/home/ab/Code/reactJs/razzel/src/views/Coursel/index.jsx"],"names":["React","useEffect","useState","Slider","connect","api","logs","moment","Coursel","props","myapi","tokens","logger","datenow","format","slideValue","setSlideValue","req","method","url","then","res","data","Show","catch","er","console","log","respone","conf","dots","infinite","autoplay","arrows","className","centerPadding","swipeToSlide","speed","slidesToShow","slidesToScroll","map","items","banner_code","banner_image_path","banner_title","mapStateToProps","state","users","token","isAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,yBAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAMC,KAAK,GAAG,IAAIL,GAAJ,CAAQI,KAAK,CAACE,MAAd,CAAd;AACA,QAAMC,MAAM,GAAG,IAAIN,IAAJ,CAAS,KAAT,EAAgB,SAAhB,CAAf;AACA,QAAMO,OAAO,GAAGN,MAAM,GAAGO,MAAT,CAAgB,YAAhB,CAAhB;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CACAO,GADL,CACS;AACDC,MAAAA,MAAM,EAAE,KADP;AAEDC,MAAAA,GAAG,EAAG,gCAA+BN,OAAQ,iBAAgBA,OAAQ;AAFpE,KADT,EAKKO,IALL,CAKWC,GAAD,IAAS;AACX,YAAM;AAAEC,QAAAA;AAAF,UAAWD,GAAG,CAACC,IAArB;AACAN,MAAAA,aAAa,CAACM,IAAD,CAAb;AACAV,MAAAA,MAAM,CAACW,IAAP,CAAYD,IAAZ;AACH,KATL,EAUKE,KAVL,CAUYC,EAAD,IAAQ;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACG,OAAf;AACH,KAZL,EADY,CAeZ;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,QAAMC,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAE,IADG;AAETC,IAAAA,QAAQ,EAAE,IAFD;AAGTC,IAAAA,QAAQ,EAAE,IAHD;AAITC,IAAAA,MAAM,EAAE,KAJC;AAKTC,IAAAA,SAAS,EAAE,QALF;AAMTC,IAAAA,aAAa,EAAE,MANN;AAOTC,IAAAA,YAAY,EAAE,IAPL;AAQTC,IAAAA,KAAK,EAAE,GARE;AASTC,IAAAA,YAAY,EAAE,CATL;AAUTC,IAAAA,cAAc,EAAE;AAVP,GAAb;AAYA,SACI;AAAS,IAAA,SAAS,EAAC;AAAnB,KACI,MAAC,MAAD,EAAYV,IAAZ,EACKd,UAAU,CAACyB,GAAX,CAAgBC,KAAD,IAAW;AACvB,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEA,KAAK,CAACC;AAAvC,OACI;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,iBAAhB;AAAmC,MAAA,GAAG,EAAEF,KAAK,CAACG;AAA9C,MADJ,CADJ;AAKH,GANA,CADL,CADJ,CADJ;AAaH;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHpC,IAAAA,MAAM,EAAEmC,KAAK,CAACC,KAAN,CAAYC,KAFjB;AAGHC,IAAAA,MAAM,EAAEH,KAAK,CAACC,KAAN,CAAYE;AAHjB,GAAP;AAKH,CAND;;AAQA,eAAe7C,OAAO,CAACyC,eAAD,CAAP,CAAyBrC,OAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Slider from \"react-slick\"\n// import { Ads } from \"helpers/dumy\"\nimport { connect } from \"react-redux\"\nimport api from \"helpers/api\"\nimport logs from \"helpers/logs\"\nimport moment from \"moment\"\nimport \"./css/style.scoped.scss\"\n\nfunction Coursel(props) {\n    const myapi = new api(props.tokens)\n    const logger = new logs(false, \"Coursel\")\n    const datenow = moment().format(\"YYYY-MM-DD\")\n    const [slideValue, setSlideValue] = useState([])\n\n    useEffect(() => {\n        myapi\n            .req({\n                method: \"GET\",\n                url: `/banner/slide?begin_date_lte=${datenow}&end_date_gte=${datenow}`,\n            })\n            .then((res) => {\n                const { data } = res.data\n                setSlideValue(data)\n                logger.Show(data)\n            })\n            .catch((er) => {\n                console.log(er.respone)\n            })\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const conf = {\n        dots: true,\n        infinite: true,\n        autoplay: true,\n        arrows: false,\n        className: \"center\",\n        centerPadding: \"60px\",\n        swipeToSlide: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n    }\n    return (\n        <section className=\"slid-panel\">\n            <Slider {...conf}>\n                {slideValue.map((items) => {\n                    return (\n                        <div className=\"slideItems\" key={items.banner_code}>\n                            <img src={items.banner_image_path} alt={items.banner_title} />\n                        </div>\n                    )\n                })}\n            </Slider>\n        </section>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        tokens: state.users.token,\n        isAuth: state.users.isAuth,\n    }\n}\n\nexport default connect(mapStateToProps)(Coursel)\n"]},"metadata":{},"sourceType":"module"}